import * as vscode from 'vscode';
import * as fs from 'fs';
import * as path from 'path';
import * as https from 'https';

interface UnityMethod {
  name: string;
  description: string;
  category: string;
  example: string;
  url: string;
}

let unityMethods: Record<string, UnityMethod> = {};
let diagnosticsCollection: vscode.DiagnosticCollection;

/** Returns a themed icon based on the category */
function getCategoryIcon(category: string): string {
  switch (category.toLowerCase()) {
    case 'amdunityplugin': return '📦';
    case 'aaptoptions': return '📦';
    case 'abstractprogressbar': return '📦';
    case 'accessibilityhierarchy': return '📦';
    case 'accessibilitynode': return '📦';
    case 'accessibilityrole': return '📦';
    case 'accessibilitysettings': return '📦';
    case 'accessibilitystate': return '📦';
    case 'action': return '📦';
    case 'activeprofilechangedeventargs': return '📦';
    case 'activity': return '📦';
    case 'activityalias': return '📦';
    case 'activityindicatorstyle': return '📦';
    case 'addandremoverequest': return '📦';
    case 'addrequest': return '📦';
    case 'addedcomponent': return '📦';
    case 'addedgameobject': return '📦';
    case 'additionaldependencies': return '📦';
    case 'additionaloutputs': return '📦';
    case 'advanceddropdown': return '📦';
    case 'advanceddropdownitem': return '📦';
    case 'advancedobjectselectorattribute': return '📦';
    case 'advancedobjectselectoreventtype': return '📦';
    case 'advancedobjectselectorparameters': return '📦';
    case 'advancedobjectselectorvalidatorattribute': return '📦';
    case 'advertisementsettings': return '📦';
    case 'afterevaluate': return '📦';
    case 'aimconstraint': return '🧠';
    case 'albedoswatchinfo': return '📦';
    case 'align': return '📦';
    case 'alignmentutils': return '📦';
    case 'allprojects': return '📦';
    case 'allocator': return '📦';
    case 'alternatingrowbackground': return '📦';
    case 'ambientmode': return '📦';
    case 'analyticssettings': return '📦';
    case 'android': return '🤖';
    case 'androidapplication': return '🤖';
    case 'androidassetpackerror': return '🤖';
    case 'androidassetpackinfo': return '🤖';
    case 'androidassetpackstate': return '🤖';
    case 'androidassetpackstatus': return '🤖';
    case 'androidassetpackusemobiledatarequestresult': return '🤖';
    case 'androidassetpacks': return '🤖';
    case 'androidcolormodehdr': return '🤖';
    case 'androidcolormodewidecolorgamut': return '🤖';
    case 'androidcomponents': return '🤖';
    case 'androidconfiguration': return '🤖';
    case 'androiddevice': return '🤖';
    case 'androidexternaltoolssettings': return '🤖';
    case 'androidgame': return '🤖';
    case 'androidgamemode': return '🤖';
    case 'androidgamestate': return '🤖';
    case 'androidhardwarekeyboardhidden': return '🤖';
    case 'androidhardwaretype': return '🤖';
    case 'androidkeyboard': return '🤖';
    case 'androidkeyboardhidden': return '🤖';
    case 'androidlaunchreport': return '🤖';
    case 'androidlocale': return '🤖';
    case 'androidmanifestfile': return '🤖';
    case 'androidnavigation': return '🤖';
    case 'androidnavigationhidden': return '🤖';
    case 'androidorientation': return '🤖';
    case 'androidplatformiconkind': return '🤖';
    case 'androidpluginimporterutilities': return '🤖';
    case 'androidprojectfiles': return '🤖';
    case 'androidprojectfilesmodifier': return '🤖';
    case 'androidprojectfilesmodifiercontext': return '🤖';
    case 'androidresources': return '🤖';
    case 'androidscreenlayoutdirection': return '🤖';
    case 'androidscreenlayoutlong': return '🤖';
    case 'androidscreenlayoutround': return '🤖';
    case 'androidscreenlayoutsize': return '🤖';
    case 'androidsharedlibrarytype': return '🤖';
    case 'androidtouchscreen': return '🤖';
    case 'androiduimodenight': return '🖥️';
    case 'androiduimodetype': return '🖥️';
    case 'angle': return '📦';
    case 'anglerangeinfo': return '📦';
    case 'angleunit': return '📦';
    case 'angularfallofftype': return '📦';
    case 'animbool': return '🎞️';
    case 'animfloat': return '🎞️';
    case 'animquaternion': return '🎞️';
    case 'animvector3': return '🎞️';
    case 'animationclipplayable': return '🎞️';
    case 'animationhumanstream': return '🎞️';
    case 'animationlayermixerplayable': return '🎞️';
    case 'animationmixerplayable': return '🎞️';
    case 'animationmode': return '🎞️';
    case 'animationplayablebinding': return '🎞️';
    case 'animationplayableoutput': return '🎞️';
    case 'animationplayableoutputextensions': return '🎞️';
    case 'animationplayableutilities': return '🎞️';
    case 'animationscenehandleutility': return '🎞️';
    case 'animationscriptplayable': return '🎞️';
    case 'animationstream': return '🎞️';
    case 'animationstreamhandleutility': return '🎞️';
    case 'animationstreamsource': return '🎞️';
    case 'animatorcondition': return '🎞️';
    case 'animatorconditionmode': return '🎞️';
    case 'animatorcontroller': return '🎞️';
    case 'animatorcontrollerlayer': return '🎞️';
    case 'animatorcontrollerplayable': return '🎞️';
    case 'animatorjobextensions': return '🎞️';
    case 'animatorlayerblendingmode': return '🎞️';
    case 'animatorstate': return '🎞️';
    case 'animatorstatemachine': return '🎞️';
    case 'animatorstatetransition': return '🎞️';
    case 'animatortransition': return '🎞️';
    case 'animatortransitionbase': return '🎞️';
    case 'antialiasingsamples': return '📦';
    case 'appattestoptions': return '📦';
    case 'apptransportsecurityexceptionentry': return '📦';
    case 'application': return '📦';
    case 'applicationexitinfoprovider': return '📦';
    case 'applypluginlist': return '📦';
    case 'applyrulesifgraphicsapiattribute': return '📦';
    case 'applyrulesifnotgraphicsapiattribute': return '📦';
    case 'applyrulesiftagsequalattribute': return '📦';
    case 'applyrulesiftagsnotequalattribute': return '📦';
    case 'arcdirection': return '📦';
    case 'archandle': return '📦';
    case 'archivefileinfo': return '📦';
    case 'archivefileinterface': return '📦';
    case 'archivehandle': return '📦';
    case 'archivestatus': return '📦';
    case 'areascope': return '📦';
    case 'argumenterrorpolicy': return '📦';
    case 'arguments': return '📦';
    case 'arraypropertybag<t0>': return '📦';
    case 'artifactid': return '📦';
    case 'artifactkey': return '📦';
    case 'askuser': return '📦';
    case 'assembliestype': return '📦';
    case 'assembly': return '📦';
    case 'assemblybuilderflags': return '🖥️';
    case 'assemblybuilderstatus': return '🖥️';
    case 'assemblydefinitionexception': return '📦';
    case 'assemblydefinitionplatform': return '📦';
    case 'assemblydefinitionreferencetype': return '📦';
    case 'assemblyflags': return '📦';
    case 'assert': return '📦';
    case 'asset': return '📦';
    case 'assetbundleinfo': return '📦';
    case 'asseteditingscope': return '📦';
    case 'assetimportcontext': return '🔠';
    case 'assetimportereditor': return '📦';
    case 'assetindexchangeset': return '📦';
    case 'assetlist': return '📦';
    case 'assetloadinfo': return '📦';
    case 'assetloadingsubsystem': return '📦';
    case 'assetmonitoringutilities': return '📦';
    case 'assigntype': return '📦';
    case 'assistivesupport': return '📦';
    case 'asyncgpureadback': return '🖥️';
    case 'asyncgpureadbackrequest': return '🖥️';
    case 'asyncreadmanager': return '📦';
    case 'asyncreadmanagermetrics': return '📦';
    case 'asyncreadmanagermetricsfilters': return '📦';
    case 'asyncreadmanagerrequestmetric': return '📦';
    case 'asyncreadmanagersummarymetrics': return '📦';
    case 'atlaspopulationmode': return '📦';
    case 'atlassettings': return '📦';
    case 'atomicsafetyerrortype': return '📦';
    case 'atomicsafetyhandle': return '📦';
    case 'attachtopanelevent': return '📦';
    case 'attacher': return '📦';
    case 'attachmentdescriptor': return '📦';
    case 'attachmentindexarray': return '📦';
    case 'attributeboolean': return '📦';
    case 'attributeenumarray<t0>': return '📦';
    case 'attributeenumstring<t0>': return '📦';
    case 'attributefloat': return '📦';
    case 'attributeinteger': return '📦';
    case 'attributestring': return '📦';
    case 'attributestringarray': return '📦';
    case 'attributeunit': return '📦';
    case 'attributescontainer': return '🧠';
    case 'attributesscope': return '📦';
    case 'audioclipplayable': return '🔊';
    case 'audiomixer': return '🔊';
    case 'audiomixergroup': return '🔊';
    case 'audiomixersnapshot': return '🔊';
    case 'audiomixerupdatemode': return '🔊';
    case 'audioplayablebinding': return '🔊';
    case 'audioplayableoutput': return '🔊';
    case 'audioresource': return '🔊';
    case 'audiosampleprovider': return '🔊';
    case 'audiostate': return '🔊';
    case 'audiotrackattributes': return '🔊';
    case 'authorinfo': return '📦';
    case 'automatic': return '📦';
    case 'axes': return '📦';
    case 'axis': return '📦';
    case 'background': return '📦';
    case 'backgroundmodesoptions': return '📦';
    case 'backgroundposition': return '📦';
    case 'backgroundpositionkeyword': return '📦';
    case 'backgroundpropertyhelper': return '📦';
    case 'backgroundrepeat': return '📦';
    case 'backgroundsize': return '📦';
    case 'backgroundsizetype': return '📦';
    case 'bakeonsceneloadmode': return '📦';
    case 'bakeprogressstate': return '📦';
    case 'baseanimvalue<t0>': return '🎞️';
    case 'baseanimvaluenonalloc<t0>': return '🎞️';
    case 'baseattribute': return '📦';
    case 'baseattributescontainer': return '🧠';
    case 'baseblock': return '📦';
    case 'baseboolfield': return '📦';
    case 'basecompositefield<t0,t1,t2>': return '📦';
    case 'baseelement': return '📦';
    case 'basefield<t0>': return '📦';
    case 'basefieldmousedragger': return '📦';
    case 'basegradlefile': return '📦';
    case 'baselistview': return '📦';
    case 'baselistviewcontroller': return '📦';
    case 'basemask64field': return '📦';
    case 'basemaskfield<t0>': return '📦';
    case 'basepopupfield<t0,t1>': return '📦';
    case 'baseproperty': return '📦';
    case 'baseslider<t0>': return '📦';
    case 'basetreeview': return '📦';
    case 'basetreeviewcontroller': return '📦';
    case 'baseverticalcollectionview': return '📦';
    case 'batchbuffertarget': return '📦';
    case 'batchcullingcontext': return '🔠';
    case 'batchcullingflags': return '📦';
    case 'batchcullingoutput': return '📦';
    case 'batchcullingoutputdrawcommands': return '📦';
    case 'batchcullingprojectiontype': return '📦';
    case 'batchcullingviewtype': return '📦';
    case 'batchdrawcommand': return '📦';
    case 'batchdrawcommandflags': return '📦';
    case 'batchdrawcommandindirect': return '📦';
    case 'batchdrawcommandprocedural': return '📦';
    case 'batchdrawcommandproceduralindirect': return '📦';
    case 'batchdrawcommandtype': return '📦';
    case 'batchdrawrange': return '📦';
    case 'batchfiltersettings': return '📦';
    case 'batchpackedcullingviewid': return '📦';
    case 'batchqueryjob<t0,t1>': return '📦';
    case 'batchqueryjobstruct<t0>': return '📦';
    case 'batchrenderergroup': return '🖌️';
    case 'batchrenderergroupcreateinfo': return '🖌️';
    case 'batchrenderergroupstrippingmode': return '🖌️';
    case 'bindableelement': return '📦';
    case 'bindablepropertychangedeventargs': return '📦';
    case 'binding': return '📦';
    case 'bindingactivationcontext': return '🔠';
    case 'bindingcontext': return '🔠';
    case 'bindingextensions': return '📦';
    case 'bindingid': return '📦';
    case 'bindinginfo': return '📦';
    case 'bindingloglevel': return '📦';
    case 'bindingmode': return '📦';
    case 'bindingresult': return '📦';
    case 'bindingsourceselectionmode': return '📦';
    case 'bindingstatus': return '📦';
    case 'bindingupdatetrigger': return '📦';
    case 'blackboard': return '📦';
    case 'blackboardfield': return '📦';
    case 'blackboardrow': return '📦';
    case 'blackboardsection': return '📦';
    case 'blendmode': return '📦';
    case 'blendop': return '📦';
    case 'blendshapebufferlayout': return '📦';
    case 'blendstate': return '📦';
    case 'blendtree': return '📦';
    case 'blendtreetype': return '📦';
    case 'block': return '📦';
    case 'blurevent': return '📦';
    case 'bone': return '📦';
    case 'boundproperty': return '📦';
    case 'boundingboxmode': return '📦';
    case 'boundsfield': return '📦';
    case 'boundsintfield': return '📦';
    case 'box': return '📦';
    case 'boxboundshandle': return '📦';
    case 'boxgeometry': return '📦';
    case 'brushguieditflags': return '🖥️';
    case 'brushtransform': return '📦';
    case 'brushesoverlay': return '📦';
    case 'bufferid': return '📦';
    case 'bufferslice<t0>': return '📦';
    case 'buildautomationsettings': return '🖥️';
    case 'buildcallbackversionattribute': return '🖥️';
    case 'buildfailedexception': return '🖥️';
    case 'buildfile': return '🖥️';
    case 'buildmethodexception': return '🖥️';
    case 'buildpipelinecontext': return '🖥️';
    case 'buildplayercontext': return '🖥️';
    case 'buildplayerprocessor': return '🖥️';
    case 'buildprofile': return '🖥️';
    case 'buildreferencemap': return '🖥️';
    case 'buildreport': return '🖥️';
    case 'buildresult': return '🖥️';
    case 'buildsettings': return '🖥️';
    case 'buildstep': return '🖥️';
    case 'buildstepmessage': return '🖥️';
    case 'buildsummary': return '🖥️';
    case 'buildtype': return '🖥️';
    case 'buildtypes': return '🖥️';
    case 'buildusagecache': return '🖥️';
    case 'buildusagetagglobal': return '🖥️';
    case 'buildusagetagset': return '🖥️';
    case 'buildutilities': return '🖥️';
    case 'builder': return '🖥️';
    case 'buildscript': return '🖥️';
    case 'builtinrendertexturetype': return '🖥️';
    case 'builtinshaderdefine': return '🖥️';
    case 'builtinshadermode': return '🖥️';
    case 'builtinshadertype': return '🖥️';
    case 'bundle': return '📦';
    case 'bundleelement': return '📦';
    case 'burst': return '📦';
    case 'button': return '📦';
    case 'callbackeventhandler': return '📦';
    case 'cameradescription': return '📷';
    case 'cameraevent': return '📷';
    case 'camerahdrmode': return '📷';
    case 'cameralatelatchmatrixtype': return '📷';
    case 'cameramode': return '📷';
    case 'cameraparameters': return '📷';
    case 'cameraplayable': return '📷';
    case 'cameraproperties': return '📷';
    case 'camerasettings': return '📷';
    case 'canstartdragargs': return '📦';
    case 'capabilities': return '📦';
    case 'capacity': return '📦';
    case 'capsuleboundshandle': return '📦';
    case 'capsulegeometry': return '📦';
    case 'captureflags': return '📦';
    case 'capturepixelformat': return '📦';
    case 'captureresulttype': return '📦';
    case 'category': return '📦';
    case 'categoryinfoattribute': return '📦';
    case 'celllayout': return '📦';
    case 'cellsizing': return '📦';
    case 'cellswizzle': return '📦';
    case 'certificatehandler': return '📦';
    case 'changecheckscope': return '📦';
    case 'changeevent<t0>': return '📦';
    case 'changeset': return '📦';
    case 'channelclient': return '📦';
    case 'channelclientinfo': return '📦';
    case 'channelclientscope': return '📦';
    case 'channelinfo': return '📦';
    case 'channelservice': return '📦';
    case 'checkoutmode': return '📦';
    case 'childanimatorstate': return '🎞️';
    case 'childanimatorstatemachine': return '🎞️';
    case 'childmotion': return '📦';
    case 'classkitoptions': return '📦';
    case 'clearcacherequest': return '📦';
    case 'clickevent': return '📦';
    case 'clickselector': return '📦';
    case 'clickable': return '📦';
    case 'client': return '📦';
    case 'clutchshortcutattribute': return '📦';
    case 'codeeditor': return '📦';
    case 'codeoptimization': return '📦';
    case 'collectimporteddependenciesattribute': return '📦';
    case 'collectionpool<t0,t1>': return '📦';
    case 'collectionviewcontroller': return '📦';
    case 'collectionvirtualizationmethod': return '📦';
    case 'colliderdata': return '📦';
    case 'collidertype': return '📦';
    case 'collisionmodule': return '📦';
    case 'colorbyspeedmodule': return '📦';
    case 'colorfield': return '📦';
    case 'colormode': return '📦';
    case 'coloroverlifetimemodule': return '📦';
    case 'colorwritemask': return '📦';
    case 'column': return '📦';
    case 'columnsortingmode': return '📦';
    case 'columns': return '📦';
    case 'commandbuffer': return '📦';
    case 'commandbufferexecutionflags': return '📦';
    case 'commandbufferextensions': return '📦';
    case 'commandeventbase<t0>': return '📦';
    case 'commonroles': return '📦';
    case 'commonusages': return '📦';
    case 'comparefunction': return '📦';
    case 'compatiblescreens': return '📦';
    case 'compilationpipeline': return '📦';
    case 'compileoptions': return '📦';
    case 'compilermessage': return '📦';
    case 'compilermessagetype': return '📦';
    case 'completionaction': return '📦';
    case 'compositeoperation': return '📦';
    case 'computequeuetype': return '📦';
    case 'concretetypevisitor': return '📦';
    case 'confidencelevel': return '📦';
    case 'configchanges': return '📦';
    case 'configfield': return '📦';
    case 'connectedplayer': return '📦';
    case 'connectiontarget': return '📦';
    case 'constantbufferinfo': return '📦';
    case 'constantinfo': return '📦';
    case 'constraintsource': return '🧠';
    case 'containerpropertybag<t0>': return '🧠';
    case 'contentbuildflags': return '🖥️';
    case 'contentbuildinterface': return '🖥️';
    case 'contentbuildprofileevent': return '🖥️';
    case 'contentdragger': return '📦';
    case 'contentfile': return '📦';
    case 'contentfileunloadhandle': return '📦';
    case 'contentloadinterface': return '📦';
    case 'contentnamespace': return '📦';
    case 'contentscenefile': return '📦';
    case 'contentsceneparameters': return '📦';
    case 'contentzoomer': return '📦';
    case 'contextclickevent': return '🔠';
    case 'contextmenuutility': return '🔠';
    case 'contexttype': return '🔠';
    case 'contextualmenumanager': return '🔠';
    case 'contextualmenumanipulator': return '🔠';
    case 'contextualmenupopulateevent': return '🔠';
    case 'convertergroup': return '📦';
    case 'convertergroups': return '📦';
    case 'convexmeshgeometry': return '📦';
    case 'cookie': return '📦';
    case 'coppadrawer': return '📦';
    case 'copytexturesupport': return '🔠';
    case 'coverage': return '📦';
    case 'coveredmethodstats': return '📦';
    case 'coveredsequencepoint': return '📦';
    case 'crashreporthandler': return '📦';
    case 'crashreporting': return '📦';
    case 'crashreportingsettings': return '📦';
    case 'createpropertyattribute': return '📦';
    case 'createsceneparameters': return '📦';
    case 'creationcontext': return '🔠';
    case 'crypto': return '📦';
    case 'cullmode': return '📦';
    case 'cullingoptions': return '📦';
    case 'cullingresults': return '📦';
    case 'cullingsplit': return '📦';
    case 'cursor': return '📦';
    case 'curvefield': return '📦';
    case 'curvefilteroptions': return '📦';
    case 'custombinding': return '📦';
    case 'customdatamodule': return '📦';
    case 'custommarkercallbackflags': return '📦';
    case 'customobjectindexerattribute': return '📦';
    case 'customobjectindexertarget': return '📦';
    case 'customsampler': return '📦';
    case 'customstreampropertytype': return '📦';
    case 'customstyleproperty<t0>': return '📦';
    case 'customstyleresolvedevent': return '📦';
    case 'cycledirection': return '📦';
    case 'dlsscommandexecutiondata': return '📦';
    case 'dlsscommandinitializationdata': return '📦';
    case 'dlsscontext': return '🔠';
    case 'dlssdebugfeatureinfos': return '📦';
    case 'dlssfeatureflags': return '📦';
    case 'dlssquality': return '📦';
    case 'dlsstexturetable': return '🔠';
    case 'data': return '📦';
    case 'databinding': return '📦';
    case 'dataformat': return '📦';
    case 'datasourcecontext': return '🔠';
    case 'datasourcecontextchanged': return '🔠';
    case 'datatype': return '📦';
    case 'datautility': return '📦';
    case 'debugscreencapture': return '📦';
    case 'debugsymbolformat': return '📦';
    case 'debugsymbollevel': return '📦';
    case 'debugsymbols': return '📦';
    case 'declarations': return '📦';
    case 'defaultbuildmethods': return '🖥️';
    case 'defaultfocusorder': return '📦';
    case 'defaultformat': return '📦';
    case 'defaultgui': return '🖥️';
    case 'defaultlaunchreport': return '📦';
    case 'defaultmulticolumntreeviewcontroller<t0>': return '📦';
    case 'defaultpreset': return '📦';
    case 'defaultpresetselectorreceiver': return '📦';
    case 'defaultreflectionmode': return '📦';
    case 'defaultstyles': return '📦';
    case 'defaulttreeviewcontroller<t0>': return '📦';
    case 'delegateproperty<t0,t1>': return '📦';
    case 'deltaspeed': return '📦';
    case 'denoisertype': return '📦';
    case 'dependencies': return '📦';
    case 'dependencyinfo': return '📦';
    case 'dependencyresolutionmanagement': return '📦';
    case 'dependencytype': return '📦';
    case 'depthstate': return '📦';
    case 'detachfrompanelevent': return '📦';
    case 'detailbrushbounds': return '🧠';
    case 'detailbrushrepresentation': return '🧠';
    case 'detectchunkcullingbounds': return '📦';
    case 'device': return '📦';
    case 'devicegeneration': return '📦';
    case 'devicesimulator': return '📦';
    case 'devicesimulatorplugin': return '📦';
    case 'diagnosticsreporting': return '📦';
    case 'dictationcompletioncause': return '📦';
    case 'dictationrecognizer': return '📦';
    case 'dictationtopicconstraint': return '🧠';
    case 'dictionarypool<t0,t1>': return '📦';
    case 'dictionarypropertybag<t0,t1>': return '📦';
    case 'didreloadscripts': return '📦';
    case 'diffuseprofilecallbackattribute': return '📦';
    case 'direction': return '📦';
    case 'directionallight': return '📦';
    case 'directorupdatemode': return '📦';
    case 'directorwrapmode': return '📦';
    case 'directory': return '📦';
    case 'disabledgroupscope': return '📦';
    case 'disabledscope': return '📦';
    case 'disclight': return '📦';
    case 'discreteevaluationattribute': return '📦';
    case 'discretetime': return '📦';
    case 'discretetimetimeextensions': return '📦';
    case 'dispatcher': return '📦';
    case 'displaymode': return '📦';
    case 'displaystyle': return '📦';
    case 'disposesentinel': return '📦';
    case 'distancemetric': return '📦';
    case 'dockposition': return '📦';
    case 'dockzone': return '📦';
    case 'documentlaunchmode': return '📦';
    case 'doublefield': return '📦';
    case 'downloadassetpackasyncoperation': return '📦';
    case 'downloadhandler': return '📦';
    case 'downloadhandlerassetbundle': return '📦';
    case 'downloadhandleraudioclip': return '🔊';
    case 'downloadhandlerbuffer': return '📦';
    case 'downloadhandlerfile': return '📦';
    case 'downloadhandlermovietexture': return '🔠';
    case 'downloadhandlerscript': return '📦';
    case 'downloadhandlertexture': return '🔠';
    case 'downloadedtextureflags': return '🔠';
    case 'downloadedtextureparams': return '🔠';
    case 'draganddropargs': return '📦';
    case 'draganddropdata': return '📦';
    case 'draganddropeventbase<t0>': return '📦';
    case 'draganddropposition': return '📦';
    case 'dragenterevent': return '📦';
    case 'dragexitedevent': return '📦';
    case 'dragleaveevent': return '📦';
    case 'dragperformevent': return '📦';
    case 'dragupdatedevent': return '📦';
    case 'dragvisualmode': return '📦';
    case 'dragger': return '📦';
    case 'drawmode': return '📦';
    case 'drawingscope': return '📦';
    case 'drawingsettings': return '📦';
    case 'dropdownfield': return '📦';
    case 'dropdownmenu': return '📦';
    case 'dropdownmenuaction': return '📦';
    case 'dropdownmenueventinfo': return '📦';
    case 'dropdownmenuseparator': return '📦';
    case 'dynamicatlasfilters': return '📦';
    case 'dynamicatlassettings': return '📦';
    case 'exrflags': return '📦';
    case 'easingfunction': return '📦';
    case 'edge': return '📦';
    case 'edgeconnector': return '📦';
    case 'edgeconnector<t0>': return '📦';
    case 'edgecontrol': return '📦';
    case 'edgedraghelper': return '📦';
    case 'edgedraghelper<t0>': return '📦';
    case 'edgemanipulator': return '📦';
    case 'editprefabcontentsscope': return '📦';
    case 'editoraction': return '📦';
    case 'editoractionresult': return '📦';
    case 'editorcamerautils': return '📷';
    case 'editorconnection': return '📦';
    case 'editorgraphicssettings': return '📦';
    case 'editorscenemanager': return '📦';
    case 'editortextrenderingmode': return '🖌️';
    case 'editortool': return '📦';
    case 'editortoolattribute': return '📦';
    case 'editortoolcontext': return '🔠';
    case 'editortoolcontextattribute': return '🔠';
    case 'editortoolbarbutton': return '📦';
    case 'editortoolbardropdown': return '📦';
    case 'editortoolbardropdowntoggle': return '📦';
    case 'editortoolbarelementattribute': return '📦';
    case 'editortoolbarfloatfield': return '📦';
    case 'editortoolbartoggle': return '📦';
    case 'editortoolbarutility': return '📦';
    case 'element': return '📦';
    case 'elementinfoattribute': return '📦';
    case 'elementslist<t0>': return '📦';
    case 'embedrequest': return '📦';
    case 'emissionmodule': return '📦';
    case 'emitparams': return '📦';
    case 'endnameeditaction': return '📦';
    case 'enforcejobresult': return '📦';
    case 'entitlementinfo': return '📦';
    case 'enumfield': return '📦';
    case 'enumflagsfield': return '📦';
    case 'enumerator': return '📦';
    case 'error': return '📦';
    case 'errorcode': return '📦';
    case 'evaluationmode': return '📦';
    case 'evaluationtype': return '📦';
    case 'eventbase': return '📦';
    case 'eventbase<t0>': return '📦';
    case 'eventdataserialization': return '📦';
    case 'eventdispatchergate': return '📦';
    case 'eventid': return '📦';
    case 'eventinterestattribute': return '📦';
    case 'eventinterestoptions': return '📦';
    case 'eventpropagation': return '📦';
    case 'eventservice': return '📦';
    case 'events': return '📦';
    case 'excludecontext<t0,t1>': return '🔠';
    case 'excludecontext<t0>': return '🔠';
    case 'executecommandevent': return '📦';
    case 'exitreason': return '📦';
    case 'externalfilereference': return '📦';
    case 'externalforcesmodule': return '📦';
    case 'externalgpuprofiler': return '🖥️';
    case 'externalnativebuild': return '🖥️';
    case 'eyes': return '📦';
    case 'fbxmaterialdescriptionpreprocessor': return '📦';
    case 'fsr2commandexecutiondata': return '📦';
    case 'fsr2commandinitializationdata': return '📦';
    case 'fsr2context': return '🔠';
    case 'fsr2quality': return '📦';
    case 'fsr2texturetable': return '🔠';
    case 'faceinfo': return '📦';
    case 'fadegroupscope': return '📦';
    case 'fallofftype': return '📦';
    case 'fastmemoryflags': return '📦';
    case 'fetchpreviewoptions': return '📦';
    case 'ffxfsr2initializationflags': return '📦';
    case 'fieldinfocollection': return '📦';
    case 'fieldmousedragger<t0>': return '📦';
    case 'fieldofviewaxis': return '📦';
    case 'file': return '📦';
    case 'filehandle': return '📦';
    case 'fileinforesult': return '📦';
    case 'filemode': return '📦';
    case 'filereadtype': return '📦';
    case 'filestate': return '📦';
    case 'filestatus': return '📦';
    case 'filetype': return '📦';
    case 'fillrule': return '📦';
    case 'filteraction': return '📦';
    case 'filterattribute': return '📦';
    case 'filtermode': return '📦';
    case 'filtertype': return '📦';
    case 'filterworkflow': return '📦';
    case 'filteringsettings': return '📦';
    case 'flags': return '📦';
    case 'flavor': return '📦';
    case 'flexdirection': return '📦';
    case 'flipaxis': return '📦';
    case 'floatcomparer': return '📦';
    case 'floatfield': return '📦';
    case 'flowevent': return '📦';
    case 'focuschangedirection': return '📦';
    case 'focuscontroller': return '📦';
    case 'focusevent': return '📦';
    case 'focuseventbase<t0>': return '📦';
    case 'focusinevent': return '📦';
    case 'focusoutevent': return '📦';
    case 'focusable': return '📦';
    case 'foldout': return '📦';
    case 'foliageindex': return '📦';
    case 'fontdefinition': return '📦';
    case 'fontengine': return '📦';
    case 'fontengineerror': return '📦';
    case 'fontfeaturetable': return '📦';
    case 'fontsoptions': return '📦';
    case 'forceoverlifetimemodule': return '📦';
    case 'forcedcrashcategory': return '📦';
    case 'foregroundservicetype': return '📦';
    case 'formatswizzle': return '📦';
    case 'formerlyserializedasattribute': return '📦';
    case 'foveatedrenderingcaps': return '🖌️';
    case 'foveatedrenderingflags': return '🖌️';
    case 'foveatedrenderingmode': return '🖌️';
    case 'framecapture': return '📦';
    case 'framecapturedestination': return '📦';
    case 'framecapturemode': return '📦';
    case 'framedata': return '📦';
    case 'framedataview': return '📦';
    case 'frametype': return '📦';
    case 'freehandselector': return '📦';
    case 'fuzzysearch': return '📦';
    case 'giworkflowmode': return '📦';
    case 'gpucachesetting': return '🖥️';
    case 'gamecontrollersoptions': return '📦';
    case 'gamemanagerdependencyinfo': return '📦';
    case 'gameobjectrecorder': return '📦';
    case 'gameobjecttoolcontext': return '🔠';
    case 'gameviewrendermode': return '🖌️';
    case 'garbagecollector': return '📦';
    case 'gatefitmode': return '📦';
    case 'gatefitparameters': return '📦';
    case 'generatepropertybagsfortypeattribute': return '📦';
    case 'generatepropertybagsfortypesqualifiedwithattribute': return '📦';
    case 'generationtype': return '📦';
    case 'genericbinding': return '📦';
    case 'genericbindingutility': return '📦';
    case 'genericdropdownmenu': return '📦';
    case 'genericpool<t0>': return '📦';
    case 'geometrychangedevent': return '📦';
    case 'geometryholder': return '📦';
    case 'geometrytype': return '📦';
    case 'getassetpackstateasyncoperation': return '📦';
    case 'gfxresourceinfo': return '📦';
    case 'gitinfo': return '📦';
    case 'gizmosubset': return '📦';
    case 'globalkeyword': return '📦';
    case 'glyph': return '📦';
    case 'glyphadjustmentrecord': return '📦';
    case 'glyphclassdefinitiontype': return '📦';
    case 'glyphloadflags': return '📦';
    case 'glyphmetrics': return '📦';
    case 'glyphpackingmode': return '📦';
    case 'glyphpairadjustmentrecord': return '🧠';
    case 'glyphrect': return '📦';
    case 'glyphrendermode': return '🖌️';
    case 'glyphvaluerecord': return '📦';
    case 'gpubvhbuildoptions': return '🖥️';
    case 'gpubvhbuildquality': return '🖥️';
    case 'gpubvhprimitivedescriptor': return '🖥️';
    case 'gradientfield': return '📦';
    case 'gradleplugin': return '📦';
    case 'gradlepropertiesfile': return '📦';
    case 'gradlesettingsfile': return '📦';
    case 'grammarrecognizer': return '📦';
    case 'granturipermission': return '📦';
    case 'graphelement': return '📦';
    case 'graphelementscopeextensions': return '📦';
    case 'graphview': return '📦';
    case 'graphviewblackboardwindow': return '📦';
    case 'graphviewchange': return '📦';
    case 'graphvieweditorwindow': return '📦';
    case 'graphviewminimapwindow': return '📦';
    case 'graphviewtoolwindow': return '📦';
    case 'graphicsapiconstraintattribute': return '🧠';
    case 'graphicsdevice': return '📦';
    case 'graphicsdevicedebugview': return '📦';
    case 'graphicsdevicefeature': return '📦';
    case 'graphicsdevicetype': return '📦';
    case 'graphicsfence': return '📦';
    case 'graphicsfencetype': return '📦';
    case 'graphicsformat': return '📦';
    case 'graphicsformatusage': return '📦';
    case 'graphicsformatutility': return '📦';
    case 'graphicssettings': return '📦';
    case 'graphicssettingsinspectorutility': return '📦';
    case 'graphicsstate': return '📦';
    case 'graphicsstatecollection': return '📦';
    case 'graphicstexture': return '🔠';
    case 'graphicstexturedescriptor': return '🔠';
    case 'graphicstexturedescriptorflags': return '🔠';
    case 'graphicstexturestate': return '🔠';
    case 'graphicstier': return '📦';
    case 'gravity': return '📦';
    case 'gridbackground': return '📦';
    case 'group': return '📦';
    case 'groupbox': return '📦';
    case 'groupscope': return '📦';
    case 'gwpasanmode': return '📦';
    case 'h264encoderattributes': return '📦';
    case 'hand': return '📦';
    case 'handfinger': return '📦';
    case 'handledirection': return '📦';
    case 'handledraganddropargs': return '📦';
    case 'hapticcapabilities': return '📦';
    case 'hash128field': return '📦';
    case 'hashsetpool<t0>': return '📦';
    case 'hashsetpropertybag<t0>': return '📦';
    case 'heightaxis': return '📦';
    case 'helpbox': return '📦';
    case 'helpboxmessagetype': return '📦';
    case 'hierarchy': return '📦';
    case 'hierarchycommandlist': return '📦';
    case 'hierarchyflattened': return '📦';
    case 'hierarchyflattenednode': return '📦';
    case 'hierarchyflattenednodechildren': return '📦';
    case 'hierarchyframedataview': return '📦';
    case 'hierarchynode': return '📦';
    case 'hierarchynodechildren': return '📦';
    case 'hierarchynodeflags': return '📦';
    case 'hierarchynodemapunmanaged<t0>': return '📦';
    case 'hierarchynodetype': return '📦';
    case 'hierarchynodetypehandlerbase': return '📦';
    case 'hierarchynodetypehandlerbaseenumerable': return '📦';
    case 'hierarchypropertydescriptor': return '📦';
    case 'hierarchypropertystoragetype': return '📦';
    case 'hierarchypropertystring': return '📦';
    case 'hierarchypropertyunmanaged<t0>': return '📦';
    case 'hierarchysearchfilter': return '📦';
    case 'hierarchysearchfilteroperator': return '📦';
    case 'hierarchysearchquerydescriptor': return '📦';
    case 'hierarchyviewmodel': return '📦';
    case 'hierarchyviewnodesenumerable': return '📦';
    case 'horizontalscope': return '📦';
    case 'iaccesscontainerwindow': return '🧠';
    case 'iaccessibilitynotificationdispatcher': return '📦';
    case 'iactivebuildtargetchanged': return '🖥️';
    case 'ianimationjob': return '🎞️';
    case 'ianimationjobplayable': return '🎞️';
    case 'ianimationwindowpreview': return '🎞️';
    case 'iapplicationexitinfo': return '📦';
    case 'ibindable': return '📦';
    case 'ibinding': return '📦';
    case 'ibindingextensions': return '📦';
    case 'icollectibleelement': return '📦';
    case 'icollectionpropertyaccept<t0>': return '📦';
    case 'icollectionpropertybagaccept<t0>': return '📦';
    case 'icollectionpropertybagvisitor': return '📦';
    case 'icollectionpropertyvisitor': return '📦';
    case 'icommandevent': return '📦';
    case 'iconnectionstate': return '📦';
    case 'iconstraint': return '🧠';
    case 'icreatehorizontaltoolbar': return '📦';
    case 'icreatetoolbar': return '📦';
    case 'icreateverticaltoolbar': return '📦';
    case 'icustomstyle': return '📦';
    case 'idatasourceprovider': return '📦';
    case 'idatasourceviewhashprovider': return '📦';
    case 'idebugpanelchangereceiver': return '📦';
    case 'idevicecontext': return '🔠';
    case 'idictionaryelementproperty': return '📦';
    case 'idictionaryelementproperty<t0>': return '📦';
    case 'idictionarypropertyaccept<t0>': return '📦';
    case 'idictionarypropertybagaccept<t0>': return '📦';
    case 'idictionarypropertybagvisitor': return '📦';
    case 'idictionarypropertyvisitor': return '📦';
    case 'idrawselectedhandles': return '📦';
    case 'idroptarget': return '📦';
    case 'idroppable': return '📦';
    case 'iedgeconnectorlistener': return '📦';
    case 'ieventhandler': return '📦';
    case 'iexcludecontravariantpropertyadapter<t0,t1>': return '📦';
    case 'iexcludecontravariantpropertyadapter<t0>': return '📦';
    case 'iexcludepropertyadapter': return '📦';
    case 'iexcludepropertyadapter<t0,t1>': return '📦';
    case 'iexcludepropertyadapter<t0>': return '📦';
    case 'iexperimentalfeatures': return '📦';
    case 'iexternalcodeeditor': return '📦';
    case 'ifilterbuildassemblies': return '🖥️';
    case 'ifilterengine<t0>': return '📦';
    case 'ifilternode': return '📦';
    case 'ifocusevent': return '📦';
    case 'ifocusring': return '📦';
    case 'igeometry': return '📦';
    case 'ihierarchyproperty<t0>': return '📦';
    case 'iiconoverlayextension': return '📦';
    case 'iindexedproperties<t0>': return '📦';
    case 'iinspectorwindowextension': return '📦';
    case 'ijob': return '📦';
    case 'ijobextensions': return '📦';
    case 'ijobfor': return '📦';
    case 'ijobforextensions': return '📦';
    case 'ijobparallelfor': return '📦';
    case 'ijobparallelforextensions': return '📦';
    case 'ijobparallelfortransform': return '📦';
    case 'ijobparallelfortransformextensions': return '📦';
    case 'ijobparticlesystem': return '📦';
    case 'ijobparticlesystemextensions': return '📦';
    case 'ijobparticlesystemparallelfor': return '📦';
    case 'ijobparticlesystemparallelforbatch': return '📦';
    case 'ijobparticlesystemparallelforbatchextensions': return '📦';
    case 'ijobparticlesystemparallelforextensions': return '📦';
    case 'ikeyboardevent': return '📦';
    case 'ikeyedproperties<t0,t1>': return '📦';
    case 'ilaunchreport': return '📦';
    case 'ilistelementproperty': return '📦';
    case 'ilistpropertyaccept<t0>': return '📦';
    case 'ilistpropertybagaccept<t0>': return '📦';
    case 'ilistpropertybagvisitor': return '📦';
    case 'ilistpropertyvisitor': return '📦';
    case 'imguicontainer': return '🖥️';
    case 'imguievent': return '🖥️';
    case 'imguioverlay': return '🖥️';
    case 'imanipulator': return '📦';
    case 'imixedvaluesupport': return '📦';
    case 'imouseevent': return '📦';
    case 'imultipartformsection': return '📦';
    case 'inamedproperties<t0>': return '📦';
    case 'inavigationevent': return '📦';
    case 'inestedquerynode': return '📦';
    case 'inotification': return '📦';
    case 'inotificationreceiver': return '📦';
    case 'inotifybindablepropertychanged': return '📦';
    case 'inotifyvaluechanged<t0>': return '📦';
    case 'inotifyvaluechangedextensions': return '📦';
    case 'iobjectpool<t0>': return '📦';
    case 'ioninspectorgui': return '🖥️';
    case 'ionpaint': return '🧠';
    case 'ionscenegui': return '🖥️';
    case 'iorderedcallback': return '📦';
    case 'ipackagemanagerextension': return '📦';
    case 'ipanel': return '📦';
    case 'iplayableasset': return '📦';
    case 'ipointerevent': return '📦';
    case 'ipopupmenuextension': return '📦';
    case 'ipostbuildplayerscriptdlls': return '🖥️';
    case 'ipostgenerategradleandroidproject': return '🤖';
    case 'ipostprocessbuildwithreport': return '🖥️';
    case 'ipostprocesslaunch': return '📦';
    case 'ipreprocessbuildwithreport': return '🖥️';
    case 'ipreprocesscomputeshaders': return '📦';
    case 'ipreprocessshaders': return '📦';
    case 'iprobeintegrator': return '📦';
    case 'iprobepostprocessor': return '📦';
    case 'iprocessscenewithreport': return '📦';
    case 'iprofilerframetimeviewsampleselectioncontroller': return '📦';
    case 'iprojecteditordrawer': return '📦';
    case 'iproperty': return '📦';
    case 'iproperty<t0>': return '📦';
    case 'ipropertyaccept<t0>': return '📦';
    case 'ipropertybag': return '📦';
    case 'ipropertybag<t0>': return '📦';
    case 'ipropertybagvisitor': return '📦';
    case 'ipropertydatabaserecord': return '📦';
    case 'ipropertydatabaserecordvalue': return '📦';
    case 'ipropertydatabaseview': return '📦';
    case 'ipropertyvisitor': return '📦';
    case 'iqueryenginefilter': return '📦';
    case 'iqueryhandler<t0,t1>': return '📦';
    case 'iqueryhandlerfactory<t0,t1,t2>': return '📦';
    case 'iquerynode': return '📦';
    case 'iquerysource': return '📦';
    case 'irenderpipelinegraphicssettings': return '🖌️';
    case 'irenderpipelinegraphicssettingscontextmenu': return '🖌️';
    case 'irenderpipelinegraphicssettingscontextmenu2': return '🖌️';
    case 'irenderpipelinegraphicssettingscontextmenu2_1': return '🖌️';
    case 'irenderpipelinegraphicssettingscontextmenu<t0>': return '🖌️';
    case 'iresizable': return '📦';
    case 'iresolvedstyle': return '📦';
    case 'iruntimepanel': return '📦';
    case 'iscenetemplatepipeline': return '📦';
    case 'iscriptablebakedreflectionsystem': return '📦';
    case 'iscriptablebakedreflectionsystemstagenotifier': return '📦';
    case 'iscriptableruntimereflectionsystem': return '📦';
    case 'isearchcontext': return '🔠';
    case 'isearchdatabase': return '📦';
    case 'isearchengine<t0>': return '📦';
    case 'isearchenginebase': return '📦';
    case 'isearchlist': return '📦';
    case 'isearchnode': return '📦';
    case 'isearchquery': return '📦';
    case 'isearchview': return '📦';
    case 'isearchwindowprovider': return '📦';
    case 'iselectable': return '📦';
    case 'iselection': return '📦';
    case 'iselectorengine': return '📦';
    case 'isetelementproperty': return '📦';
    case 'isetelementproperty<t0>': return '📦';
    case 'isetpropertyaccept<t0>': return '📦';
    case 'isetpropertybagaccept<t0>': return '📦';
    case 'isetpropertybagvisitor': return '📦';
    case 'isetpropertyvisitor': return '📦';
    case 'isettingsinspectorextension': return '📦';
    case 'ishortcutcontext': return '🔠';
    case 'ishortcutmanager': return '📦';
    case 'ishouldincludeinbuildcallback': return '🖥️';
    case 'istyle': return '📦';
    case 'istylevalue<t0>': return '📦';
    case 'itableview': return '📦';
    case 'iterraininfo': return '🧠';
    case 'itextedition': return '🔠';
    case 'itextelementexperimentalfeatures': return '🔠';
    case 'itextselection': return '🔠';
    case 'itilemap': return '📦';
    case 'itoolbarmenuelement': return '📦';
    case 'itransform': return '📦';
    case 'itransientoverlay': return '📦';
    case 'itransitionanimations': return '🎞️';
    case 'itransitionevent': return '📦';
    case 'itypevisitor': return '📦';
    case 'iunitylinkerprocessor': return '📦';
    case 'iuxmlattributes': return '📦';
    case 'ivalueanimation': return '🎞️';
    case 'ivaluefield<t0>': return '📦';
    case 'ivisitcontravariantpropertyadapter<t0,t1>': return '📦';
    case 'ivisitcontravariantpropertyadapter<t0>': return '📦';
    case 'ivisitpropertyadapter': return '📦';
    case 'ivisitpropertyadapter<t0,t1>': return '📦';
    case 'ivisitpropertyadapter<t0>': return '📦';
    case 'ivisualelementscheduleditem': return '📦';
    case 'ivisualelementscheduler': return '📦';
    case 'iconbadge': return '📦';
    case 'iconoverlaytype': return '📦';
    case 'iconsizescope': return '📦';
    case 'il2cppcodegeneration': return '📦';
    case 'image': return '📦';
    case 'immediatecontact': return '📦';
    case 'immediatemodeelement': return '📦';
    case 'immediatephysics': return '⚙️';
    case 'immediatetransform': return '📦';
    case 'importlog': return '📦';
    case 'importlogentry': return '📦';
    case 'importlogflags': return '📦';
    case 'importoptions': return '📦';
    case 'includelist': return '📦';
    case 'indentlevelscope': return '📦';
    case 'indexformat': return '📦';
    case 'indexedcollectionpropertybag<t0,t1>': return '📦';
    case 'indexingoptions': return '📦';
    case 'indirectdrawargs': return '📦';
    case 'indirectdrawindexedargs': return '📦';
    case 'inheritvelocitymodule': return '📦';
    case 'input': return '🎮';
    case 'inputdevice': return '🎮';
    case 'inputdevicecharacteristics': return '🎮';
    case 'inputdevicerole': return '🎮';
    case 'inputdevices': return '🎮';
    case 'inputevent': return '🎮';
    case 'inputextraction': return '🎮';
    case 'inputfeatureusage': return '🎮';
    case 'inputfeatureusage<t0>': return '🎮';
    case 'inputfieldappearance': return '🎮';
    case 'inputsystemeventsystem': return '🎮';
    case 'inputtracking': return '🎮';
    case 'inputtrackingstate': return '🎮';
    case 'inputwrapper': return '🎮';
    case 'inspectorelement': return '📦';
    case 'installlocation': return '📦';
    case 'installation': return '📦';
    case 'instantiationkind': return '📦';
    case 'instantiationresult': return '📦';
    case 'instrumentation': return '📦';
    case 'integerfield': return '📦';
    case 'integrationcontext': return '🔠';
    case 'intent': return '📦';
    case 'intentfilter': return '📦';
    case 'invalidcontainertypeexception': return '🧠';
    case 'invalidimportexception': return '📦';
    case 'invalidpathexception': return '📦';
    case 'item': return '📦';
    case 'itemselectors': return '📦';
    case 'javaversion': return '📦';
    case 'jnilibs': return '📦';
    case 'jobhandle': return '📦';
    case 'jobhandleunsafeutility': return '📦';
    case 'jobproducertypeattribute': return '📦';
    case 'jobranges': return '📦';
    case 'jobscheduleparameters': return '📦';
    case 'jobsutility': return '📦';
    case 'jointangularlimithandle': return '📦';
    case 'justify': return '📦';
    case 'keycombination': return '📦';
    case 'keydownevent': return '📦';
    case 'keyupevent': return '📦';
    case 'keyvaluecollectionpropertybag<t0,t1,t2>': return '📦';
    case 'keyvaluepairpropertybag<t0,t1>': return '🧠';
    case 'keyboardeventbase<t0>': return '📦';
    case 'keyboardnavigationmanipulator': return '📦';
    case 'keyboardnavigationoperation': return '📦';
    case 'keywordrecognizer': return '📦';
    case 'lodparameters': return '📦';
    case 'label': return '📦';
    case 'languagedirection': return '📦';
    case 'latelatchnode': return '📦';
    case 'launch': return '📦';
    case 'launchmode': return '📦';
    case 'launchresult': return '📦';
    case 'launcher': return '📦';
    case 'layer': return '📦';
    case 'layerfield': return '📦';
    case 'layermaskfield': return '📦';
    case 'layout': return '📦';
    case 'length': return '📦';
    case 'lengthunit': return '📦';
    case 'licenseinformation': return '📦';
    case 'licensingutility': return '📦';
    case 'lifecycle': return '📦';
    case 'lifetimebyemitterspeedmodule': return '📦';
    case 'light2dbase': return '📦';
    case 'lightdatagi': return '📦';
    case 'lightdescription': return '📦';
    case 'lightevent': return '📦';
    case 'lightmode': return '📦';
    case 'lightprobeoutsidehullstrategy': return '📦';
    case 'lightprobeusage': return '📦';
    case 'lightshadowcastercullinginfo': return '📦';
    case 'lightshadowresolution': return '📦';
    case 'lighttype': return '📦';
    case 'lightunit': return '📦';
    case 'lightmapmixedbakemodes': return '📦';
    case 'lightmapper': return '📦';
    case 'lightmapperutils': return '📦';
    case 'lightmapping': return '📦';
    case 'lightsmodule': return '📦';
    case 'limitvelocityoverlifetimemodule': return '📦';
    case 'linecap': return '📦';
    case 'linejoin': return '📦';
    case 'linearcolor': return '📦';
    case 'linkedpool<t0>': return '📦';
    case 'lint': return '📦';
    case 'lintoptions': return '📦';
    case 'listpool<t0>': return '📦';
    case 'listpropertybag<t0>': return '📦';
    case 'listrequest': return '📦';
    case 'listview': return '📦';
    case 'listviewcontroller': return '📦';
    case 'listviewreordermode': return '📦';
    case 'loadscenemode': return '📦';
    case 'loadsceneparameters': return '📦';
    case 'loadstoreactiondebugmodesettings': return '📦';
    case 'loadingstatus': return '📦';
    case 'localkeyword': return '📦';
    case 'localkeywordspace': return '📦';
    case 'localphysicsmode': return '⚙️';
    case 'localpropertiesfile': return '📦';
    case 'location': return '📦';
    case 'locktaskmode': return '📦';
    case 'loglevel': return '📦';
    case 'longfield': return '📦';
    case 'lookatconstraint': return '🧠';
    case 'machinelearningcontext': return '🔠';
    case 'machinelearningdatatype': return '📦';
    case 'machinelearningoperator': return '📦';
    case 'machinelearningoperatordispatcher': return '📦';
    case 'machinelearningoperatorfactory': return '📦';
    case 'machinelearningoperatortype': return '📦';
    case 'machinelearningtensordescriptor': return '📦';
    case 'machinelearningtensorshape': return '📦';
    case 'mainmodule': return '🧠';
    case 'mainstage': return '🧠';
    case 'manageddebugger': return '📦';
    case 'managedreferenceutility': return '📦';
    case 'managementmode': return '📦';
    case 'manifest': return '📦';
    case 'manipulator': return '📦';
    case 'manipulatoractivationfilter': return '📦';
    case 'mapsoptions': return '📦';
    case 'markerflags': return '📦';
    case 'markerinfo': return '📦';
    case 'markermetadatainfo': return '🧠';
    case 'mask64field': return '📦';
    case 'maskfield': return '📦';
    case 'masksource': return '📦';
    case 'materialdescription': return '📦';
    case 'materialeffectplayable': return '📦';
    case 'materialindex': return '📦';
    case 'materiallocation': return '📦';
    case 'materialsettingscallbackattribute': return '📦';
    case 'measuremode': return '📦';
    case 'mediaencoder': return '📦';
    case 'mediarational': return '📦';
    case 'mediatime': return '📦';
    case 'memoryprofiler': return '📦';
    case 'memorysnapshotmetadata': return '📦';
    case 'meshchangestate': return '📦';
    case 'meshcollidertype': return '📦';
    case 'meshdata': return '📦';
    case 'meshdataarray': return '📦';
    case 'meshgenerationcontext': return '🔠';
    case 'meshgenerationnode': return '📦';
    case 'meshgenerationoptions': return '📦';
    case 'meshgenerationresult': return '📦';
    case 'meshgenerationstatus': return '📦';
    case 'meshid': return '📦';
    case 'meshinfo': return '📦';
    case 'meshtransform': return '📦';
    case 'meshupdateflags': return '📦';
    case 'meshvertexattributes': return '📦';
    case 'meshwritedata': return '📦';
    case 'message': return '📦';
    case 'messageeventargs': return '📦';
    case 'metadata': return '📦';
    case 'metadatavalue': return '📦';
    case 'metalvalidation': return '📦';
    case 'methodcollection': return '📦';
    case 'methodinfo': return '📦';
    case 'minmaxcurve': return '📦';
    case 'minmaxgradient': return '📦';
    case 'minmaxslider': return '📦';
    case 'minsizepolicy': return '📦';
    case 'minimap': return '📦';
    case 'missingpropertybagexception': return '📦';
    case 'mixedvaluescope': return '📦';
    case 'mobile': return '📦';
    case 'mode': return '📦';
    case 'modulebuildgradlefile': return '🖥️';
    case 'monoorstereoscopiceye': return '🔄';
    case 'mousebutton': return '📦';
    case 'mousecapturecontroller': return '📦';
    case 'mousecaptureevent': return '📦';
    case 'mousecaptureeventbase<t0>': return '📦';
    case 'mousecaptureoutevent': return '📦';
    case 'mousedownevent': return '📦';
    case 'mouseenterevent': return '📦';
    case 'mouseenterwindowevent': return '📦';
    case 'mouseeventbase<t0>': return '📦';
    case 'mouseleaveevent': return '📦';
    case 'mouseleavewindowevent': return '📦';
    case 'mousemanipulator': return '📦';
    case 'mousemoveevent': return '📦';
    case 'mouseoutevent': return '📦';
    case 'mouseoverevent': return '📦';
    case 'mouseupevent': return '📦';
    case 'multicolumncontroller': return '📦';
    case 'multicolumnheader': return '📦';
    case 'multicolumnheaderstate': return '📦';
    case 'multicolumnlistview': return '📦';
    case 'multicolumnlistviewcontroller': return '📦';
    case 'multicolumntreeview': return '📦';
    case 'multicolumntreeviewcontroller': return '📦';
    case 'multipartformdatasection': return '📦';
    case 'multipartformfilesection': return '📦';
    case 'musclehandle': return '📦';
    case 'nvunityplugin': return '📦';
    case 'namedbuildtarget': return '🖥️';
    case 'namingscheme': return '📦';
    case 'nativearray<t0>': return '📦';
    case 'nativearrayoptions': return '📦';
    case 'nativearrayunsafeutility': return '📦';
    case 'nativebuildoption': return '🖥️';
    case 'nativefixedlengthattribute': return '📦';
    case 'nativeleakdetection': return '📦';
    case 'nativeleakdetectionmode': return '📦';
    case 'nativeslice<t0>': return '📦';
    case 'nativesliceunsafeutility': return '📦';
    case 'navmesh': return '📦';
    case 'navmeshagent': return '📦';
    case 'navmeshbuilddebugflags': return '🖥️';
    case 'navmeshbuilddebugsettings': return '🖥️';
    case 'navmeshbuildmarkup': return '🖥️';
    case 'navmeshbuildsettings': return '🖥️';
    case 'navmeshbuildsource': return '🖥️';
    case 'navmeshbuildsourceshape': return '🖥️';
    case 'navmeshbuilder': return '🖥️';
    case 'navmeshcollectgeometry': return '📦';
    case 'navmeshdata': return '📦';
    case 'navmeshdatainstance': return '🧠';
    case 'navmesheditorhelpers': return '📦';
    case 'navmeshhit': return '📦';
    case 'navmeshlinkdata': return '📦';
    case 'navmeshobstacle': return '📦';
    case 'navmeshobstacleshape': return '📦';
    case 'navmeshpath': return '📦';
    case 'navmeshpathstatus': return '📦';
    case 'navmeshqueryfilter': return '📦';
    case 'navmeshtriangulation': return '📦';
    case 'navigationcancelevent': return '📦';
    case 'navigationeventbase<t0>': return '📦';
    case 'navigationmoveevent': return '📦';
    case 'navigationsubmitevent': return '📦';
    case 'ndk': return '📦';
    case 'neighborterrainsindex': return '🧠';
    case 'nestedinteractionkind': return '📦';
    case 'networkextensionsoptions': return '🌐';
    case 'networkslicing5gappcategoryoptions': return '🌐';
    case 'networkslicing5gtrafficcategoryoptions': return '🌐';
    case 'newscenemode': return '📦';
    case 'newscenesetup': return '📦';
    case 'node': return '📦';
    case 'nodecreationcontext': return '🔠';
    case 'noisemodule': return '📦';
    case 'notkeyableattribute': return '📦';
    case 'notification': return '📦';
    case 'osarchitecture': return '📦';
    case 'objectfield': return '📦';
    case 'objectidrequest': return '📦';
    case 'objectidresult': return '📦';
    case 'objectidentifier': return '📦';
    case 'objectindexer': return '📦';
    case 'objectoverride': return '📦';
    case 'objectpool<t0>': return '📦';
    case 'objectselectorsearch': return '📦';
    case 'objectselectorsearchcontext': return '🔠';
    case 'objectselectorsearchendsessionmodes': return '📦';
    case 'objectserializedinfo': return '📦';
    case 'obstacleavoidancetype': return '📦';
    case 'offmeshlink': return '📦';
    case 'offmeshlinkdata': return '📦';
    case 'offmeshlinktype': return '📦';
    case 'ondemandrendering': return '🖌️';
    case 'ondemandresources': return '📦';
    case 'ondemandresourcesrequest': return '📦';
    case 'oninspectorguicontext': return '🖥️';
    case 'onopenassetattributemode': return '📦';
    case 'onlinestate': return '📦';
    case 'opaquesortmode': return '📦';
    case 'openglesversion': return '📦';
    case 'openscenemode': return '📦';
    case 'optimaldlsssettingsdata': return '📦';
    case 'options': return '📦';
    case 'orientation': return '📦';
    case 'overflow': return '📦';
    case 'overflowclipbox': return '📦';
    case 'overlay': return '📦';
    case 'overlayattribute': return '📦';
    case 'overlaycanvas': return '📦';
    case 'overlaytoolbar': return '📦';
    case 'overridetexturecompression': return '🔠';
    case 'pbxcapabilitytype': return '📦';
    case 'pbxproject': return '📦';
    case 'pbxprojectextensions': return '🔠';
    case 'pbxsourcetree': return '📦';
    case 'pix': return '📦';
    case 'packoperationresult': return '📦';
    case 'packrequest': return '📦';
    case 'packtransform': return '📦';
    case 'package': return '📦';
    case 'packagecollection': return '📦';
    case 'packageinfo': return '📦';
    case 'packagemanagerextensions': return '📦';
    case 'packageregistrationeventargs': return '📦';
    case 'packagesource': return '📦';
    case 'packaging': return '📦';
    case 'packagingoptions': return '📦';
    case 'packedassetinfo': return '📦';
    case 'packedassets': return '📦';
    case 'packer': return '📦';
    case 'packerdata': return '📦';
    case 'packerjob': return '📦';
    case 'paintcontext': return '🧠';
    case 'paintdetailstoolutility': return '🧠';
    case 'painttreesdetailscontext': return '🧠';
    case 'painter2d': return '🧠';
    case 'panelchangedeventbase<t0>': return '📦';
    case 'panelscalemode': return '📦';
    case 'panelscreenmatchmode': return '📦';
    case 'panelsettings': return '📦';
    case 'paneltextsettings': return '🔠';
    case 'parentconstraint': return '🧠';
    case 'parseresult<t0>': return '📦';
    case 'parsedquery<t0,t1>': return '📦';
    case 'parsedquery<t0>': return '📦';
    case 'particle': return '📦';
    case 'particlesystemjobdata': return '📦';
    case 'particlesystemnativearray3': return '📦';
    case 'particlesystemnativearray4': return '📦';
    case 'pass': return '📦';
    case 'passidentifier': return '📦';
    case 'passtype': return '📦';
    case 'pathpermission': return '📦';
    case 'pathvisitor': return '📦';
    case 'penbutton': return '📦';
    case 'perobjectdata': return '📦';
    case 'permission': return '📦';
    case 'permissioncallbacks': return '📦';
    case 'permissiongroup': return '📦';
    case 'permissiontree': return '📦';
    case 'persistablemode': return '📦';
    case 'persistentlistenermode': return '📦';
    case 'photocapture': return '📦';
    case 'photocapturefileoutputformat': return '📦';
    case 'photocaptureframe': return '📦';
    case 'photocaptureresult': return '📦';
    case 'phraserecognitionsystem': return '📦';
    case 'phraserecognizedeventargs': return '📦';
    case 'phraserecognizer': return '📦';
    case 'pickingmode': return '📦';
    case 'pill': return '📦';
    case 'pixelperfectrendering': return '🖌️';
    case 'placemat': return '📦';
    case 'placematcontainer': return '🧠';
    case 'platformkeywordset': return '📦';
    case 'playmodeviewtypes': return '📦';
    case 'playstate': return '📦';
    case 'playable': return '📦';
    case 'playableasset': return '📦';
    case 'playablebehaviour': return '📦';
    case 'playablebinding': return '📦';
    case 'playabledirector': return '📦';
    case 'playableextensions': return '📦';
    case 'playablegraph': return '📦';
    case 'playableoutput': return '📦';
    case 'playableoutputeditorextensions': return '📦';
    case 'playableoutputextensions': return '🔠';
    case 'playabletraversalmode': return '📦';
    case 'playerbuildinterface': return '🖥️';
    case 'playerconnection': return '📦';
    case 'playerconnectiongui': return '🖥️';
    case 'playerconnectionguilayout': return '🖥️';
    case 'playerconnectionguiutility': return '🖥️';
    case 'playerloop': return '📦';
    case 'playerloopsystem': return '📦';
    case 'plistdocument': return '📦';
    case 'plistelement': return '📦';
    case 'plistelementarray': return '📦';
    case 'plistelementboolean': return '📦';
    case 'plistelementdate': return '📦';
    case 'plistelementdict': return '📦';
    case 'plistelementinteger': return '📦';
    case 'plistelementreal': return '📦';
    case 'plistelementstring': return '📦';
    case 'plugin': return '📦';
    case 'pluginmanagement': return '📦';
    case 'plugins': return '📦';
    case 'pointlight': return '📦';
    case 'pointercancelevent': return '📦';
    case 'pointercaptureevent': return '📦';
    case 'pointercaptureeventbase<t0>': return '📦';
    case 'pointercapturehelper': return '📦';
    case 'pointercaptureoutevent': return '📦';
    case 'pointerdownevent': return '📦';
    case 'pointerdownlinktagevent': return '📦';
    case 'pointerenterevent': return '📦';
    case 'pointereventbase<t0>': return '📦';
    case 'pointerid': return '📦';
    case 'pointerleaveevent': return '📦';
    case 'pointermanipulator': return '📦';
    case 'pointermoveevent': return '📦';
    case 'pointermovelinktagevent': return '📦';
    case 'pointeroutevent': return '📦';
    case 'pointeroutlinktagevent': return '📦';
    case 'pointeroverevent': return '📦';
    case 'pointeroverlinktagevent': return '📦';
    case 'pointerstationaryevent': return '📦';
    case 'pointertype': return '📦';
    case 'pointerupevent': return '📦';
    case 'pointeruplinktagevent': return '📦';
    case 'pooledobject<t0>': return '📦';
    case 'popupfield<t0>': return '📦';
    case 'popupwindow': return '📦';
    case 'port': return '📦';
    case 'portsource<t0>': return '📦';
    case 'position': return '📦';
    case 'positionconstraint': return '🧠';
    case 'positionenumerator': return '📦';
    case 'precedence': return '📦';
    case 'precompiledassemblysources': return '📦';
    case 'prefaboverride': return '📦';
    case 'prefabstage': return '📦';
    case 'prefabstageutility': return '📦';
    case 'preloadinfo': return '📦';
    case 'preprocessedvariant': return '📦';
    case 'preset': return '📦';
    case 'presetselector': return '📦';
    case 'presetselectorreceiver': return '📦';
    case 'presettype': return '📦';
    case 'previewscenestage': return '📦';
    case 'primitiveboundshandle': return '📦';
    case 'priority': return '📦';
    case 'probepositionmode': return '📦';
    case 'processevent': return '📦';
    case 'processimportance': return '📦';
    case 'processlevel': return '📦';
    case 'processservice': return '📦';
    case 'processstate': return '📦';
    case 'processingstate': return '📦';
    case 'productflavors': return '📦';
    case 'profilecaptureoptions': return '📦';
    case 'profileeventtype': return '📦';
    case 'profileable': return '📦';
    case 'profiler': return '📦';
    case 'profilerarea': return '📦';
    case 'profilercategory': return '📦';
    case 'profilercategorycolor': return '📦';
    case 'profilercategorydescription': return '📦';
    case 'profilercategoryflags': return '📦';
    case 'profilercategoryinfo': return '📦';
    case 'profilercounterdescriptor': return '📦';
    case 'profilercounteroptions': return '📦';
    case 'profilereditorutility': return '📦';
    case 'profilerfloweventtype': return '📦';
    case 'profilermarker': return '📦';
    case 'profilermarkerdata': return '📦';
    case 'profilermarkerdatatype': return '📦';
    case 'profilermarkerdataunit': return '📦';
    case 'profilermodule': return '📦';
    case 'profilermodulecharttype': return '📦';
    case 'profilermodulemetadataattribute': return '📦';
    case 'profilermoduleviewcontroller': return '📦';
    case 'profilerrecorder': return '📦';
    case 'profilerrecorderdescription': return '📦';
    case 'profilerrecorderhandle': return '📦';
    case 'profilerrecorderoptions': return '📦';
    case 'profilerrecordersample': return '📦';
    case 'profilertimesampleselection': return '📦';
    case 'profilerunsafeutility': return '📦';
    case 'progressbar': return '📦';
    case 'projectbinddrawer': return '📦';
    case 'projectcapabilitymanager': return '📦';
    case 'projectlevelbuildgradlefile': return '🖥️';
    case 'projectsearch': return '📦';
    case 'projectsearchcontext': return '🔠';
    case 'propflags': return '📦';
    case 'proptype': return '📦';
    case 'propagationphase': return '📦';
    case 'property<t0,t1>': return '📦';
    case 'property<t0>': return '📦';
    case 'propertybag': return '📦';
    case 'propertybag<t0>': return '📦';
    case 'propertyboolean': return '📦';
    case 'propertycallbackscope': return '📦';
    case 'propertycollection<t0>': return '📦';
    case 'propertycontainer': return '🧠';
    case 'propertydatabase': return '📦';
    case 'propertydatabaserecordkey': return '📦';
    case 'propertydatabasetype': return '📦';
    case 'propertyenum<t0>': return '📦';
    case 'propertyfield': return '📦';
    case 'propertypath': return '📦';
    case 'propertypathpart': return '📦';
    case 'propertypathpartkind': return '📦';
    case 'propertyscenehandle': return '📦';
    case 'propertyscope': return '📦';
    case 'propertystreamhandle': return '📦';
    case 'propertystring': return '📦';
    case 'propertystringarray': return '📦';
    case 'propertytable': return '📦';
    case 'propertyunsignedinteger': return '📦';
    case 'propertyvisibility': return '📦';
    case 'propertyvisitor': return '📦';
    case 'protectionlevel': return '📦';
    case 'provider': return '📦';
    case 'purchasingsettings': return '📦';
    case 'qualitymode': return '📦';
    case 'queries': return '📦';
    case 'queryblock': return '📦';
    case 'queryengine': return '📦';
    case 'queryengine<t0>': return '📦';
    case 'queryenginefilterattribute': return '📦';
    case 'queryerror': return '📦';
    case 'queryfilter': return '📦';
    case 'queryfilteroperator': return '📦';
    case 'querygraph': return '📦';
    case 'querygraphoptimizationoptions': return '📦';
    case 'querylistblock': return '📦';
    case 'querylistblockattribute': return '📦';
    case 'querynodetype': return '📦';
    case 'querytoken': return '📦';
    case 'queryvalidationoptions': return '📦';
    case 'rtclearflags': return '📦';
    case 'radeonrayscontext': return '🔠';
    case 'radeonraysprobeintegrator': return '📦';
    case 'radeonraysprobepostprocessor': return '📦';
    case 'radeonraysworld': return '📦';
    case 'radiobutton': return '📦';
    case 'radiobuttongroup': return '📦';
    case 'rasterstate': return '📦';
    case 'rationaltime': return '📦';
    case 'rationaltimeextensions': return '📦';
    case 'rawframedataview': return '📦';
    case 'raytracingaabbsinstanceconfig': return '📦';
    case 'raytracingaccelerationstructure': return '📦';
    case 'raytracingaccelerationstructurebuildflags': return '🖥️';
    case 'raytracinggeometryinstanceconfig': return '📦';
    case 'raytracinginstancecullingconfig': return '📦';
    case 'raytracinginstancecullingflags': return '📦';
    case 'raytracinginstancecullingmaterialtest': return '📦';
    case 'raytracinginstancecullingresults': return '📦';
    case 'raytracinginstancecullingshadertagconfig': return '📦';
    case 'raytracinginstancecullingtest': return '📦';
    case 'raytracinginstancematerialcrc': return '📦';
    case 'raytracinginstancematerialconfig': return '📦';
    case 'raytracinginstancetrianglecullingconfig': return '📦';
    case 'raytracingmeshinstanceconfig': return '📦';
    case 'raytracingmode': return '📦';
    case 'raytracingmodemask': return '📦';
    case 'raytracingshader': return '📦';
    case 'raytracingsubmeshflags': return '📦';
    case 'raytracingsubmeshflagsconfig': return '📦';
    case 'readcommand': return '📦';
    case 'readcommandarray': return '📦';
    case 'readhandle': return '📦';
    case 'readonly': return '📦';
    case 'readstatus': return '📦';
    case 'realtimegicpuusage': return '📦';
    case 'receiver': return '📦';
    case 'recorder': return '📦';
    case 'rectfield': return '📦';
    case 'rectintfield': return '📦';
    case 'rectutils': return '📦';
    case 'rectanglelight': return '📦';
    case 'rectangleselector': return '📦';
    case 'referencecontext': return '🔠';
    case 'referenceprobepostprocessor': return '📦';
    case 'referencesoptions': return '📦';
    case 'reflectedmemberproperty<t0,t1>': return '📦';
    case 'reflectioncubemapcompression': return '📦';
    case 'reflectionprobeblendinfo': return '📦';
    case 'reflectionprobeclearflags': return '📦';
    case 'reflectionprobeevent': return '📦';
    case 'reflectionprobemode': return '📦';
    case 'reflectionprobemodes': return '📦';
    case 'reflectionproberefreshmode': return '📦';
    case 'reflectionprobesortingcriteria': return '📦';
    case 'reflectionprobetimeslicingmode': return '📦';
    case 'reflectionprobeusage': return '📦';
    case 'refreshflags': return '📦';
    case 'refreshimportmode': return '📦';
    case 'refreshmode': return '📦';
    case 'registryinfo': return '📦';
    case 'remote': return '📦';
    case 'removeifattribute': return '📦';
    case 'removeifnotattribute': return '📦';
    case 'removeorselectattribute': return '📦';
    case 'removerequest': return '📦';
    case 'removedcomponent': return '📦';
    case 'removedgameobject': return '📦';
    case 'renameendedargs': return '📦';
    case 'renderbufferloadaction': return '🖌️';
    case 'renderbufferstoreaction': return '🖌️';
    case 'rendermode': return '🖌️';
    case 'renderpipeline': return '🖌️';
    case 'renderpipelineasset': return '🖌️';
    case 'renderpipelineasset<t0>': return '🖌️';
    case 'renderpipelineeditorutility': return '🖌️';
    case 'renderpipelineglobalsettings': return '🖌️';
    case 'renderpipelinegraphicssettingscollection': return '🖌️';
    case 'renderpipelinegraphicssettingseditorutility': return '🖌️';
    case 'renderpipelinegraphicssettingsextensions': return '🖌️';
    case 'renderpipelinemanager': return '🖌️';
    case 'renderqueue': return '🖌️';
    case 'renderqueuerange': return '🖌️';
    case 'rendersettings': return '🖌️';
    case 'renderstateblock': return '🖌️';
    case 'renderstatemask': return '🖌️';
    case 'rendertargetbinding': return '🖌️';
    case 'rendertargetblendstate': return '🖌️';
    case 'rendertargetflags': return '🖌️';
    case 'rendertargetidentifier': return '🖌️';
    case 'rendertexturesubelement': return '🖌️';
    case 'rendererlist': return '🖌️';
    case 'rendererlistdesc': return '🖌️';
    case 'rendererlistparams': return '🖌️';
    case 'rendererliststatus': return '🖌️';
    case 'renderinglayermaskfield': return '🖌️';
    case 'renderinglayerslimitsettings': return '🖌️';
    case 'renderingthreadingmode': return '🖌️';
    case 'repaintflags': return '🧠';
    case 'repeat': return '📦';
    case 'repeatbutton': return '📦';
    case 'replaykit': return '📦';
    case 'repositories': return '📦';
    case 'repositoriesmode': return '📦';
    case 'repositoryinfo': return '📦';
    case 'reprojectionmode': return '📦';
    case 'reqkeyboardtype': return '📦';
    case 'reqnavigation': return '📦';
    case 'reqtouchscreen': return '📦';
    case 'request': return '📦';
    case 'request<t0>': return '📦';
    case 'requestscriptcompilationoptions': return '📦';
    case 'requesttousemobiledataasyncoperation': return '📦';
    case 'reservemodifiersattribute': return '📦';
    case 'resettoeditordefaultsrequest': return '📦';
    case 'resizableelement': return '📦';
    case 'resizer': return '📦';
    case 'resizerdirection': return '📦';
    case 'resolutionmode': return '📦';
    case 'resolvemethod': return '📦';
    case 'resolver': return '📦';
    case 'resourcefile': return '📦';
    case 'resourceformattedpathsattribute': return '📦';
    case 'resourcepathattribute': return '📦';
    case 'resourcepathsattribute': return '📦';
    case 'resourcepathsbaseattribute': return '📦';
    case 'responsefiledata': return '📦';
    case 'result': return '📦';
    case 'resulttype': return '📦';
    case 'revertmode': return '📦';
    case 'roleproviderattribute': return '📦';
    case 'rotate': return '📦';
    case 'rotationbyspeedmodule': return '📦';
    case 'rotationconstraint': return '🧠';
    case 'rotationdirection': return '📦';
    case 'rotationoverlifetimemodule': return '📦';
    case 'rowguiargs': return '🖥️';
    case 'runafterassemblyattribute': return '📦';
    case 'runafterclassattribute': return '📦';
    case 'runafterpackageattribute': return '📦';
    case 'runbeforeassemblyattribute': return '📦';
    case 'runbeforeclassattribute': return '📦';
    case 'runbeforepackageattribute': return '📦';
    case 'runtimepanelutils': return '📦';
    case 'sample': return '📦';
    case 'sampler': return '📦';
    case 'savedata': return '📦';
    case 'scale': return '📦';
    case 'scaleconstraint': return '🧠';
    case 'scene': return '📦';
    case 'scenebundleinfo': return '📦';
    case 'scenecullingmasks': return '📦';
    case 'scenedependencyinfo': return '📦';
    case 'sceneloadinfo': return '📦';
    case 'sceneloadingstatus': return '📦';
    case 'scenemanager': return '📦';
    case 'scenemanagerapi': return '📦';
    case 'scenequeryenginefilterattribute': return '📦';
    case 'scenesearch': return '📦';
    case 'scenesearchcontext': return '🔠';
    case 'scenesetup': return '📦';
    case 'scenestatehash': return '📦';
    case 'scenetemplateasset': return '📦';
    case 'scenetemplatepipelineadapter': return '📦';
    case 'scenetemplateservice': return '📦';
    case 'sceneutility': return '📦';
    case 'sceneviewstate': return '📦';
    case 'scenesusingasset': return '📦';
    case 'scenesusingassets': return '📦';
    case 'schedulemode': return '📦';
    case 'scope': return '📦';
    case 'scopedrenderpass': return '🖌️';
    case 'scopedsubpass': return '📦';
    case 'screen': return '📦';
    case 'screendensity': return '📦';
    case 'screenorientation': return '📦';
    case 'screensize': return '📦';
    case 'scriptcompilationoptions': return '📦';
    case 'scriptcompilationresult': return '📦';
    case 'scriptcompilationsettings': return '📦';
    case 'scriptcompileroptions': return '📦';
    case 'scriptplayablebinding': return '📦';
    case 'scriptplayableoutput': return '📦';
    case 'scriptablebakedreflectionsystem': return '📦';
    case 'scriptablebakedreflectionsystemsettings': return '📦';
    case 'scriptablecullingparameters': return '📦';
    case 'scriptablepacker': return '📦';
    case 'scriptablerendercontext': return '🖌️';
    case 'scriptableruntimereflectionsystem': return '📦';
    case 'scriptableruntimereflectionsystemsettings': return '📦';
    case 'scriptedimporter': return '📦';
    case 'scriptedimporterattribute': return '📦';
    case 'scriptedimportereditor': return '📦';
    case 'scrollview': return '📦';
    case 'scrollviewmode': return '📦';
    case 'scrollviewscope': return '📦';
    case 'scroller': return '📦';
    case 'scrollervisibility': return '📦';
    case 'sculptindex': return '📦';
    case 'searchaction': return '📦';
    case 'searchcolumn': return '📦';
    case 'searchcolumncompareargs': return '📦';
    case 'searchcolumneventargs': return '📦';
    case 'searchcolumnflags': return '📦';
    case 'searchcolumnproviderattribute': return '📦';
    case 'searchcontext': return '🔠';
    case 'searchcontextattribute': return '🔠';
    case 'searchdocument': return '📦';
    case 'searchdocumentflags': return '📦';
    case 'searchenginescope': return '📦';
    case 'searchexpression': return '📦';
    case 'searchexpressioncontext': return '🔠';
    case 'searchexpressionevaluationhints': return '📦';
    case 'searchexpressionevaluatorattribute': return '📦';
    case 'searchexpressionevaluatorsignatureoverloadattribute': return '📦';
    case 'searchexpressionkeyword': return '📦';
    case 'searchexpressionruntime': return '📦';
    case 'searchexpressiontype': return '📦';
    case 'searchfield': return '📦';
    case 'searchfieldbase<t0,t1>': return '📦';
    case 'searchflags': return '📦';
    case 'searchindexer': return '📦';
    case 'searchitem': return '📦';
    case 'searchitemoptions': return '📦';
    case 'searchmonitor': return '📦';
    case 'searchmonitorview': return '📦';
    case 'searchproposition': return '📦';
    case 'searchpropositionflags': return '📦';
    case 'searchpropositionflagsextensions': return '📦';
    case 'searchpropositionoptions': return '📦';
    case 'searchprovider': return '📦';
    case 'searchqueryerror': return '📦';
    case 'searchqueryerrortype': return '📦';
    case 'searchrequest': return '📦';
    case 'searchresult': return '📦';
    case 'searchselection': return '📦';
    case 'searchselectorargs': return '📦';
    case 'searchselectorattribute': return '📦';
    case 'searchservice': return '📦';
    case 'searchsettings': return '📦';
    case 'searchtable': return '📦';
    case 'searchtreeentry': return '📦';
    case 'searchtreegroupentry': return '📦';
    case 'searchtype': return '📦';
    case 'searchutils': return '📦';
    case 'searchvalue': return '📦';
    case 'searchviewflags': return '📦';
    case 'searchviewstate': return '📦';
    case 'searchwindow': return '📦';
    case 'searchwindowcontext': return '🔠';
    case 'secondarytiledata': return '📦';
    case 'selectifattribute': return '📦';
    case 'selectifnotattribute': return '📦';
    case 'selectorremoveattribute': return '📦';
    case 'selectiondragger': return '📦';
    case 'selectiondropper': return '📦';
    case 'selectiontype': return '📦';
    case 'semanticmeaning': return '📦';
    case 'serializationinfo': return '📦';
    case 'serializedlocation': return '📦';
    case 'serializedobjectchangeevent': return '📦';
    case 'serializedpropertychangeevent': return '📦';
    case 'service': return '📦';
    case 'setpropertybagbase<t0,t1>': return '📦';
    case 'settings': return '📦';
    case 'setupdraganddropargs': return '📦';
    case 'severity': return '📦';
    case 'shadercompilerdata': return '📦';
    case 'shadercompilermessageseverity': return '📦';
    case 'shadercompilerplatform': return '📦';
    case 'shaderconstanttype': return '📦';
    case 'shaderkeyword': return '📦';
    case 'shaderkeywordset': return '📦';
    case 'shaderkeywordtype': return '📦';
    case 'shaderparamtype': return '📦';
    case 'shaderpropertyflags': return '📦';
    case 'shaderpropertytype': return '📦';
    case 'shaderquality': return '📦';
    case 'shaderrequirements': return '🖥️';
    case 'shadersnippetdata': return '📦';
    case 'shadertagid': return '📦';
    case 'shadertype': return '📦';
    case 'shadervariant': return '📦';
    case 'shaderwarmup': return '📦';
    case 'shaderwarmupsetup': return '📦';
    case 'shadingratecombiner': return '📦';
    case 'shadingratecombinerstage': return '📦';
    case 'shadingratefragmentsize': return '📦';
    case 'shadingrateimage': return '📦';
    case 'shadingrateinfo': return '📦';
    case 'shadowcasterscullinginfos': return '📦';
    case 'shadowcastingmode': return '📦';
    case 'shadowdrawingsettings': return '📦';
    case 'shadowmappass': return '📦';
    case 'shadowsamplingmode': return '📦';
    case 'shadowsplitdata': return '📦';
    case 'shapecontrolpoint': return '📦';
    case 'shapemodule': return '📦';
    case 'shortcutarguments': return '📦';
    case 'shortcutattribute': return '📦';
    case 'shortcutbinding': return '📦';
    case 'shortcutbindingchangedeventargs': return '📦';
    case 'shortcuthandler': return '📦';
    case 'shortcutmanager': return '📦';
    case 'shortcutmodifiers': return '📦';
    case 'shortcutstage': return '📦';
    case 'showdetailsoptions': return '🧠';
    case 'signingconfig': return '📦';
    case 'signingconfigs': return '📦';
    case 'singlepassstereomode': return '📦';
    case 'sizebyspeedmodule': return '📦';
    case 'sizeoverlifetimemodule': return '📦';
    case 'sketchupmaterialdescriptionpreprocessor': return '📦';
    case 'slicetype': return '📦';
    case 'slidemovement': return '📦';
    case 'slideresults': return '📦';
    case 'slider': return '📦';
    case 'sliderdirection': return '📦';
    case 'sliderint': return '📦';
    case 'sortcolumndescription': return '📦';
    case 'sortcolumndescriptions': return '📦';
    case 'sortdirection': return '📦';
    case 'sortorder': return '📦';
    case 'sortingcriteria': return '📦';
    case 'sortinggroup': return '📦';
    case 'sortinglayerrange': return '📦';
    case 'sortingsettings': return '📦';
    case 'sourceassetidentifier': return '📦';
    case 'sourcetextureinformation': return '🔠';
    case 'speecherror': return '📦';
    case 'speechsystemstatus': return '📦';
    case 'speedtree9importer': return '📦';
    case 'sphereboundshandle': return '📦';
    case 'spheregeometry': return '📦';
    case 'sphericalharmonicsl2': return '📦';
    case 'splashscreen': return '📦';
    case 'splashscreenlogo': return '📦';
    case 'spotlight': return '📦';
    case 'spotlightboxshape': return '📦';
    case 'spotlightpyramidshape': return '📦';
    case 'spriteatlas': return '📦';
    case 'spriteatlasasset': return '📦';
    case 'spriteatlasextensions': return '📦';
    case 'spriteatlasimporter': return '📦';
    case 'spriteatlasmanager': return '📦';
    case 'spriteatlaspackingsettings': return '📦';
    case 'spriteatlastexturesettings': return '🔠';
    case 'spriteatlasutility': return '📦';
    case 'spritebone': return '📦';
    case 'spritedata': return '📦';
    case 'spritedataaccessextensions': return '📦';
    case 'spriteeditorextension': return '📦';
    case 'spriteimportdata': return '📦';
    case 'spritepack': return '📦';
    case 'spriterendererdataaccessextensions': return '🖌️';
    case 'spriteshapemetadata': return '📦';
    case 'spriteshapeparameters': return '📦';
    case 'spriteshaperenderer': return '🖌️';
    case 'spriteshapesegment': return '📦';
    case 'spriteshapeutility': return '📦';
    case 'spriteutility': return '📦';
    case 'stacknode': return '📦';
    case 'stage': return '📦';
    case 'stagehandle': return '📦';
    case 'stageutility': return '📦';
    case 'standalone': return '📦';
    case 'standardrequest': return '📦';
    case 'startdragargs': return '📦';
    case 'startuplog': return '📦';
    case 'statemachinebehaviourcontext': return '🔠';
    case 'states': return '📦';
    case 'status': return '📦';
    case 'statuscode': return '📦';
    case 'stencilop': return '📦';
    case 'stencilstate': return '📦';
    case 'stereorenderingmode': return '🖌️';
    case 'stereoscreencapturemode': return '📦';
    case 'stereoscopiceye': return '📦';
    case 'stickynote': return '📦';
    case 'stickynotechange': return '📦';
    case 'stickynotechangeevent': return '📦';
    case 'stickynotefontsize': return '📦';
    case 'stickynotetheme': return '📦';
    case 'stopbehavior': return '📦';
    case 'streaming': return '📦';
    case 'stretchmode': return '📦';
    case 'stringview': return '📦';
    case 'strippinginfo': return '📦';
    case 'stylebackground': return '📦';
    case 'stylebackgroundposition': return '📦';
    case 'stylebackgroundrepeat': return '📦';
    case 'stylebackgroundsize': return '📦';
    case 'stylecolor': return '📦';
    case 'stylecursor': return '📦';
    case 'styleenum<t0>': return '📦';
    case 'stylefloat': return '📦';
    case 'stylefont': return '📦';
    case 'stylefontdefinition': return '📦';
    case 'styleint': return '📦';
    case 'stylekeyword': return '📦';
    case 'stylelength': return '📦';
    case 'stylelist<t0>': return '📦';
    case 'stylepropertyname': return '📦';
    case 'stylepropertynamecollection': return '📦';
    case 'stylerotate': return '📦';
    case 'stylescale': return '📦';
    case 'stylesheet': return '📦';
    case 'styletextshadow': return '🔠';
    case 'styletransformorigin': return '📦';
    case 'styletranslate': return '📦';
    case 'stylevalues': return '📦';
    case 'subemittersmodule': return '📦';
    case 'submeshdescriptor': return '📦';
    case 'subpassdescriptor': return '📦';
    case 'subpassflags': return '📦';
    case 'submitresult': return '📦';
    case 'subshader': return '📦';
    case 'subsystemdescriptorwithprovider': return '📦';
    case 'subsystemwithprovider': return '📦';
    case 'supportedmode': return '📦';
    case 'supportedonrenderpipelineattribute': return '🖌️';
    case 'supportedrenderingfeatures': return '🖌️';
    case 'supportsgltexture': return '🔠';
    case 'supportsscreens': return '📦';
    case 'synctile': return '📦';
    case 'synchronisationstage': return '📦';
    case 'synchronisationstageflags': return '📦';
    case 'system': return '📦';
    case 'systemgesturedefermode': return '📦';
    case 'systeminfo': return '📦';
    case 'tab': return '📦';
    case 'tabview': return '📦';
    case 'tagconstraintattribute': return '🧠';
    case 'tagfield': return '📦';
    case 'tangentmode': return '📦';
    case 'target': return '📦';
    case 'targetsandboxversion': return '📦';
    case 'task': return '📦';
    case 'tempmeshallocator': return '📦';
    case 'templatecontainer': return '🧠';
    case 'templateinstantiationmode': return '📦';
    case 'terrainbrushpreviewmode': return '🧠';
    case 'terrainbuiltinpaintmaterialpasses': return '🖥️';
    case 'terraincategory': return '🧠';
    case 'terraingeometry': return '🧠';
    case 'terraininspectorutility': return '🧠';
    case 'terrainmap': return '🧠';
    case 'terrainpainttool<t0>': return '🧠';
    case 'terrainpainttoolwithoverlays<t0>': return '🧠';
    case 'terrainpainttoolwithoverlaysbase': return '🧠';
    case 'terrainpaintutility': return '🧠';
    case 'terrainpaintutilityeditor': return '🧠';
    case 'terraintilecoord': return '🧠';
    case 'terraintoolshortcutcontext': return '🧠';
    case 'terrainutility': return '🧠';
    case 'textcursorplacement': return '🔠';
    case 'textelement': return '🔠';
    case 'textfield': return '🔠';
    case 'textinputbasefield<t0>': return '🎮';
    case 'textoverflow': return '🔠';
    case 'textoverflowposition': return '🔠';
    case 'textshadow': return '🔠';
    case 'textvaluefield<t0>': return '🔠';
    case 'textvalueinput': return '🎮';
    case 'texturebindinginfo': return '🔠';
    case 'texturedata': return '🔠';
    case 'texturedimension': return '🔠';
    case 'texturegenerationoutput': return '🔠';
    case 'texturegenerationsettings': return '🔠';
    case 'texturegenerator': return '🔠';
    case 'texturelayout': return '🔠';
    case 'texturemixerplayable': return '🔠';
    case 'textureplayablebinding': return '🔠';
    case 'textureplayableoutput': return '🔠';
    case 'texturepropertydescription': return '🔠';
    case 'texturesheetanimationmodule': return '🎞️';
    case 'themestylesheet': return '📦';
    case 'threadedbatchcontext': return '🔠';
    case 'threedsmaterialdescriptionpreprocessor': return '📦';
    case 'tickspersecond': return '📦';
    case 'tiersettings': return '📦';
    case 'tile': return '📦';
    case 'tileanimationdata': return '🎞️';
    case 'tileanimationflags': return '🎞️';
    case 'tilebase': return '📦';
    case 'tilechangedata': return '📦';
    case 'tiledata': return '📦';
    case 'tileflags': return '📦';
    case 'tilemap': return '📦';
    case 'tilemapcollider2d': return '📦';
    case 'tilemaprenderer': return '🖌️';
    case 'timedisplaymode': return '📦';
    case 'timeunit': return '📦';
    case 'timevalue': return '📦';
    case 'timerstate': return '📦';
    case 'timestampconversionratio': return '📦';
    case 'toast': return '📦';
    case 'toggle': return '📦';
    case 'togglebuttongroup': return '📦';
    case 'togglebuttongroupstate': return '📦';
    case 'togglebuttongroupstatepropertiesattribute': return '📦';
    case 'togglegroupscope': return '📦';
    case 'tokennode': return '📦';
    case 'tool': return '📦';
    case 'toolattribute': return '📦';
    case 'toolmanager': return '📦';
    case 'toolbar': return '📦';
    case 'toolbarbreadcrumbs': return '📦';
    case 'toolbarbutton': return '📦';
    case 'toolbarbuttonsize': return '📦';
    case 'toolbarmenu': return '📦';
    case 'toolbarmenuelementextensions': return '🔠';
    case 'toolbaroverlay': return '📦';
    case 'toolbarpopupsearchfield': return '📦';
    case 'toolbarsearchfield': return '📦';
    case 'toolbarspacer': return '📦';
    case 'toolbartoggle': return '📦';
    case 'toolsnode': return '📦';
    case 'tooltipevent': return '📦';
    case 'touchevent': return '📦';
    case 'touchphase': return '📦';
    case 'touchscrollbehavior': return '📦';
    case 'trackingoriginmodeflags': return '📦';
    case 'trailmodule': return '🧠';
    case 'trails': return '🧠';
    case 'transformaccess': return '📦';
    case 'transformaccessarray': return '📦';
    case 'transformorigin': return '📦';
    case 'transformoriginoffset': return '📦';
    case 'transformscenehandle': return '📦';
    case 'transformstreamhandle': return '📦';
    case 'transitioncancelevent': return '📦';
    case 'transitionendevent': return '📦';
    case 'transitioneventbase<t0>': return '📦';
    case 'transitioninterruptionsource': return '📦';
    case 'transitionrunevent': return '📦';
    case 'transitionstartevent': return '📦';
    case 'translate': return '📦';
    case 'treeview': return '📦';
    case 'treeviewcontroller': return '📦';
    case 'treeviewexpansionchangedargs': return '📦';
    case 'treeviewitem': return '📦';
    case 'treeviewitemdata<t0>': return '📦';
    case 'treeviewselectionoptions': return '📦';
    case 'treeviewstate': return '📦';
    case 'trianglemeshgeometry': return '📦';
    case 'trickledown': return '📦';
    case 'triggermodule': return '📦';
    case 'twopanesplitview': return '📦';
    case 'twopanesplitvieworientation': return '📦';
    case 'typecollection': return '📦';
    case 'typeconversion': return '📦';
    case 'typedb': return '📦';
    case 'typegenerationoptions': return '📦';
    case 'typetraits': return '🧠';
    case 'typetraits<t0>': return '🧠';
    case 'typeutility': return '📦';
    case 'typeduxmlattributedescription<t0>': return '📦';
    case 'uidocument': return '🖥️';
    case 'uioptions': return '🖥️';
    case 'uirenderer': return '🖥️';
    case 'uisubset': return '🖥️';
    case 'uitoolkitinputbackendoption': return '🖥️';
    case 'uitoolkitinputconfiguration': return '🖥️';
    case 'uquerybuilder<t0>': return '🖥️';
    case 'uqueryextensions': return '📦';
    case 'uquerystate<t0>': return '📦';
    case 'uvchannelflags': return '📦';
    case 'unit': return '📦';
    case 'unity.android.gradle': return '🤖';
    case 'unityengine.aimodule': return '🧠';
    case 'unityengine.amdmodule': return '📦';
    case 'unityengine.accessibilitymodule': return '📦';
    case 'unityengine.androidjnimodule': return '🤖';
    case 'unityengine.animationmodule': return '🎞️';
    case 'unityengine.assetbundlemodule': return '📦';
    case 'unityengine.audiomodule': return '🔊';
    case 'unityengine.clothmodule': return '📦';
    case 'unityengine.contentloadmodule': return '📦';
    case 'unityengine.coremodule': return '📦';
    case 'unityengine.directormodule': return '📦';
    case 'unityengine.hierarchycoremodule': return '📦';
    case 'unityengine.imguimodule': return '🖥️';
    case 'unityengine.imageconversionmodule': return '📦';
    case 'unityengine.inputlegacymodule': return '🎮';
    case 'unityengine.jsonserializemodule': return '📦';
    case 'unityengine.nvidiamodule': return '📦';
    case 'unityengine.particlesystemmodule': return '📦';
    case 'unityengine.physics2dmodule': return '⚙️';
    case 'unityengine.physicsmodule': return '⚙️';
    case 'unityengine.propertiesmodule': return '📦';
    case 'unityengine.screencapturemodule': return '📦';
    case 'unityengine.subsystemsmodule': return '📦';
    case 'unityengine.terrainmodule': return '🧠';
    case 'unityengine.terrainphysicsmodule': return '⚙️';
    case 'unityengine.textrenderingmodule': return '🖌️';
    case 'unityengine.tilemapmodule': return '📦';
    case 'unityengine.uielementsmodule': return '🖥️';
    case 'unityengine.uimodule': return '🖥️';
    case 'unityengine.unitywebrequestassetbundlemodule': return '📦';
    case 'unityengine.unitywebrequestaudiomodule': return '🔊';
    case 'unityengine.unitywebrequestmodule': return '📦';
    case 'unityengine.unitywebrequesttexturemodule': return '🔠';
    case 'unityengine.vrmodule': return '📦';
    case 'unityengine.vehiclesmodule': return '📦';
    case 'unityengine.videomodule': return '📹';
    case 'unityengine.virtualtexturingmodule': return '🔠';
    case 'unityengine.webglmodule': return '📦';
    case 'unityengine.windmodule': return '📦';
    case 'unityengine.xrmodule': return '📦';
    case 'unityevent': return '📦';
    case 'unityevent<t0,t1,t2,t3>': return '📦';
    case 'unityevent<t0,t1,t2>': return '📦';
    case 'unityevent<t0,t1>': return '📦';
    case 'unityevent<t0>': return '📦';
    case 'unityeventbase': return '📦';
    case 'unityeventcallstate': return '📦';
    case 'unityeventtools': return '📦';
    case 'unitylinkerbuildpipelinedata': return '🖥️';
    case 'unitylogostyle': return '📦';
    case 'unityobjectinfo': return '📦';
    case 'unityobjectnativetypeinfo': return '📦';
    case 'unitywebrequest': return '📦';
    case 'unitywebrequestassetbundle': return '📦';
    case 'unitywebrequestasyncoperation': return '📦';
    case 'unitywebrequestmultimedia': return '📦';
    case 'unitywebrequesttexture': return '🔠';
    case 'unloadsceneoptions': return '📦';
    case 'unsafegenericpool<t0>': return '📦';
    case 'unsafeutility': return '📦';
    case 'unsignedintegerfield': return '📦';
    case 'unsignedlongfield': return '📦';
    case 'uploadhandler': return '📦';
    case 'uploadhandlerfile': return '📦';
    case 'uploadhandlerraw': return '📦';
    case 'usageflags': return '📦';
    case 'usagehints': return '📦';
    case 'use': return '📦';
    case 'userbuildsettings': return '🖥️';
    case 'usesconfiguration': return '📦';
    case 'usesfeature': return '📦';
    case 'useslibrary': return '📦';
    case 'usesnativelibrary': return '📦';
    case 'usespermission': return '📦';
    case 'usespermissionsdk23': return '📦';
    case 'usessdk': return '📦';
    case 'utility': return '📦';
    case 'utils': return '📦';
    case 'uxmlassetattributedescription<t0>': return '📦';
    case 'uxmlattributeattribute': return '📦';
    case 'uxmlattributeconverter<t0>': return '📦';
    case 'uxmlattributedescription': return '📦';
    case 'uxmlattributeflags': return '📦';
    case 'uxmlattributenames': return '📦';
    case 'uxmlboolattributedescription': return '📦';
    case 'uxmlchildelementdescription': return '📦';
    case 'uxmlcolorattributedescription': return '📦';
    case 'uxmldescriptioncache': return '📦';
    case 'uxmldoubleattributedescription': return '📦';
    case 'uxmlelementattribute': return '📦';
    case 'uxmlenumattributedescription<t0>': return '📦';
    case 'uxmlenumeration': return '📦';
    case 'uxmlfloatattributedescription': return '📦';
    case 'uxmlhash128attributedescription': return '📦';
    case 'uxmlintattributedescription': return '📦';
    case 'uxmllongattributedescription': return '📦';
    case 'uxmlnamespaceprefixattribute': return '📦';
    case 'uxmlobjectreferenceattribute': return '📦';
    case 'uxmlserializeddata': return '📦';
    case 'uxmlserializeddatacreator': return '📦';
    case 'uxmlserializeddatautility': return '📦';
    case 'uxmlstringattributedescription': return '📦';
    case 'uxmltypeattributedescription<t0>': return '📦';
    case 'uxmltypereferenceattribute': return '📦';
    case 'uxmltyperestriction': return '📦';
    case 'uxmlunsignedintattributedescription': return '📦';
    case 'uxmlunsignedlongattributedescription': return '📦';
    case 'uxmlvaluebounds': return '📦';
    case 'uxmlvaluematches': return '📦';
    case 'vfxbatchedeffectinfo': return '📦';
    case 'vfxcamerabuffertypes': return '📷';
    case 'vfxcameraxrsettings': return '📷';
    case 'vfxeventattribute': return '📦';
    case 'vfxexposedproperty': return '📦';
    case 'vfxexpressionvalues': return '📦';
    case 'vfxmanager': return '📦';
    case 'vfxoutputeventargs': return '📦';
    case 'vfxparticlesysteminfo': return '📦';
    case 'vfxrenderer': return '🖌️';
    case 'vfxspace': return '📦';
    case 'vfxspawnercallbacks': return '📦';
    case 'vfxspawnerloopstate': return '📦';
    case 'vfxspawnerstate': return '📦';
    case 'vp8encoderattributes': return '📦';
    case 'validatecommandevent': return '📦';
    case 'valueanimation<t0>': return '🎞️';
    case 'valuetype': return '📦';
    case 'variant': return '📦';
    case 'variantcompileinfo': return '📦';
    case 'vector2field': return '📦';
    case 'vector2intfield': return '📦';
    case 'vector3field': return '📦';
    case 'vector3intfield': return '📦';
    case 'vector4field': return '📦';
    case 'vectorimage': return '📦';
    case 'velocityoverlifetimemodule': return '📦';
    case 'versionchangetype': return '📦';
    case 'versioncontrolattribute': return '📦';
    case 'versioncontroldescriptor': return '📦';
    case 'versioncontrolmanager': return '📦';
    case 'versioncontrolobject': return '📦';
    case 'versioncontrolutils': return '📦';
    case 'versionsinfo': return '📦';
    case 'vertex': return '📦';
    case 'vertexattribute': return '📦';
    case 'vertexattributedescriptor': return '📦';
    case 'vertexattributeformat': return '📦';
    case 'verticalscope': return '📦';
    case 'video3dlayout': return '📹';
    case 'videoaspectratio': return '📹';
    case 'videoaudiooutputmode': return '🔊';
    case 'videocapture': return '📹';
    case 'videocaptureresult': return '📹';
    case 'videoclip': return '📹';
    case 'videoclipplayable': return '📹';
    case 'videoplayer': return '📹';
    case 'videoplayerextensions': return '📹';
    case 'videorendermode': return '🖌️';
    case 'videoshadersincludemode': return '📹';
    case 'videosource': return '📹';
    case 'videotimereference': return '📹';
    case 'videotimeupdatemode': return '📹';
    case 'videotrackattributes': return '📹';
    case 'videotrackencoderattributes': return '📹';
    case 'viewmodes': return '📦';
    case 'virtualfilesystem': return '📦';
    case 'visibility': return '📦';
    case 'visiblelight': return '📦';
    case 'visibleobjects': return '📦';
    case 'visiblereflectionprobe': return '📦';
    case 'visionos': return '📦';
    case 'visionutility': return '📦';
    case 'visitcontext<t0,t1>': return '🔠';
    case 'visitcontext<t0>': return '🔠';
    case 'visitexceptionkind': return '📦';
    case 'visitparameters': return '📦';
    case 'visitreturncode': return '📦';
    case 'visualeffect': return '📦';
    case 'visualeffectasset': return '📦';
    case 'visualeffectobject': return '📦';
    case 'visualelement': return '📦';
    case 'visualelementextensions': return '🔠';
    case 'visualelementfocuschangedirection': return '📦';
    case 'visualelementfocusring': return '📦';
    case 'visualelementstylesheetset': return '📦';
    case 'visualtreeasset': return '📦';
    case 'wsa': return '📦';
    case 'wsaapplicationforegroundtext': return '🔠';
    case 'wsaapplicationshowname': return '📦';
    case 'wsacapability': return '📦';
    case 'wsadefaulttilesize': return '📦';
    case 'wsafiletypeassociations': return '📦';
    case 'wsaimagescale': return '🧠';
    case 'wsaimagetype': return '🧠';
    case 'wsainputsource': return '🧠';
    case 'wsasupportedfiletype': return '📦';
    case 'wsatargetfamily': return '📦';
    case 'wasmcodeoptimization': return '📦';
    case 'watermark': return '📦';
    case 'webcam': return '📦';
    case 'webcammode': return '📦';
    case 'webgl': return '📦';
    case 'wheelevent': return '📦';
    case 'whitespace': return '📦';
    case 'windowactivationstate': return '📦';
    case 'windowsoftinputmode': return '🎮';
    case 'worlduptype': return '📦';
    case 'wrap': return '📦';
    case 'writecommand': return '📦';
    case 'writemanagerparameters': return '📦';
    case 'writeparameters': return '📦';
    case 'writeresult': return '📦';
    case 'writesceneparameters': return '📦';
    case 'xrblitparams': return '📦';
    case 'xrdevice': return '📦';
    case 'xrdisplaysubsystem': return '📦';
    case 'xrdisplaysubsystemdescriptor': return '📦';
    case 'xrinputsubsystem': return '🎮';
    case 'xrinputsubsystemdescriptor': return '🎮';
    case 'xrmeshsubsystem': return '📦';
    case 'xrmeshsubsystemdescriptor': return '📦';
    case 'xrmirrorviewblitdesc': return '📦';
    case 'xrmirrorviewblitmode': return '📦';
    case 'xrmirrorviewblitmodedesc': return '📦';
    case 'xrnode': return '📦';
    case 'xrnodestate': return '📦';
    case 'xrrenderparameter': return '🖌️';
    case 'xrrenderpass': return '🖌️';
    case 'xrsettings': return '📦';
    case 'xrstats': return '📦';
    case 'xcscheme': return '📦';
    case 'xmlprolog': return '📦';
    case 'ios': return '📦';
    case 'iosplatformiconkind': return '📦';
    case 'tvos': return '📦';
    case 'tvosplatformiconkind': return '📦';
    default: return '📦';
  }
}
export function activate(context: vscode.ExtensionContext) {
  console.log("✅ Unity Method Helper Extension Activated");
  const methodsPath = path.join(context.extensionPath, 'methods.json');
  if (fs.existsSync(methodsPath)) {
    unityMethods = JSON.parse(fs.readFileSync(methodsPath, 'utf-8'));
  }

  const config = vscode.workspace.getConfiguration('unityMethodHelper');
  diagnosticsCollection = vscode.languages.createDiagnosticCollection('unityMethods');
  const completionProvider = vscode.languages.registerCompletionItemProvider(
    'csharp',
    {
      provideCompletionItems() {
        return Object.entries(unityMethods).map(([name, method]) => {
          const item = new vscode.CompletionItem(name, vscode.CompletionItemKind.Method);
          item.detail = `Unity ${method.category}`;
          item.insertText = new vscode.SnippetString(method.example);
          item.documentation = new vscode.MarkdownString(`${method.description}\n\n[🔗 Docs](${method.url})`);
          return item;
        });
      }
    },
    '.' // Trigger
  );
  const hoverProvider = vscode.languages.registerHoverProvider('csharp', {
    provideHover(document, position) {
      const word = document.getText(document.getWordRangeAtPosition(position));
      const method = unityMethods[word];
      if (!method) {
        return;
      }

      return new vscode.Hover([
        `**${getCategoryIcon(method.category)} ${word}** (${method.category})`,
        '',
        method.description,
        '```csharp\n' + method.example + '\n```',
        `[🔗 Open Docs](${method.url})`
      ]);
    }
  });
  const showAllCommand = vscode.commands.registerCommand('unityMethods.showAll', async () => {
    const items = Object.entries(unityMethods).map(([name, method]) => ({
      label: `${getCategoryIcon(method.category)} ${name}`,
      description: method.description,
      detail: `Category: ${method.category}`,
      methodData: method
    }));

    const selected = await vscode.window.showQuickPick(items, {
      placeHolder: 'Select a Unity method to open documentation'
    });

    if (selected) {
      vscode.env.openExternal(vscode.Uri.parse(selected.methodData.url));
    }
  });
  const snippetInsertCommand = vscode.commands.registerCommand('unityMethods.insertSnippet', async () => {
    const categories = [...new Set(Object.values(unityMethods).map(m => m.category))];

    const selectedCategory = await vscode.window.showQuickPick(categories, {
      placeHolder: 'Select a Unity method category'
    });
    if (!selectedCategory) {
      return;
    }

    const methods = Object.entries(unityMethods)
      .filter(([, m]) => m.category === selectedCategory)
      .map(([name, m]) => ({
        label: `${getCategoryIcon(m.category)} ${name}`,
        description: m.description,
        method: m
      }));

    const selectedMethod = await vscode.window.showQuickPick(methods, {
      placeHolder: `Choose a ${selectedCategory} method`
    });

    if (selectedMethod && vscode.window.activeTextEditor) {
      vscode.window.activeTextEditor.insertSnippet(new vscode.SnippetString(selectedMethod.method.example));
    }
  });
  const validateUnityData = vscode.commands.registerCommand('unityMethods.validateUnityData', () => {
    const problems: string[] = [];

    for (const [name, method] of Object.entries(unityMethods)) {
      if (!method.description) { problems.push(`${name} is missing description`); }
      if (!method.example) { problems.push(`${name} is missing example`); }
      if (!method.category) { problems.push(`${name} is missing category`); }
    }

    if (problems.length === 0) {
      vscode.window.showInformationMessage("✅ All Unity methods are valid!");
    } else {
      vscode.window.showErrorMessage(`❌ Found ${problems.length} problems:\n${problems.join('\n')}`);
    }
  });
  const generateMethodSnippet = vscode.commands.registerCommand('unityMethods.generateMethodSnippet', async () => {
    const name = await vscode.window.showInputBox({
      placeHolder: 'Enter your method name (e.g. CustomLogic)',
      validateInput: (text) => !text.match(/^[A-Za-z_][A-Za-z0-9_]*$/) ? 'Invalid method name' : null
    });
    if (!name) { return; }

    const body = await vscode.window.showInputBox({
      placeHolder: 'Enter method body (e.g. Debug.Log("Run");)',
    });
    if (body === undefined) { return; }

    const snippet = `void ${name}() {\n    ${body}\n}`;

    if (vscode.window.activeTextEditor) {
      vscode.window.activeTextEditor.insertSnippet(new vscode.SnippetString(snippet));
    }

    vscode.window.showInformationMessage(`✅ Inserted method snippet: ${name}()`);
  });
  const treeProvider: vscode.TreeDataProvider<vscode.TreeItem> = {
    getChildren(element?: vscode.TreeItem): vscode.ProviderResult<vscode.TreeItem[]> {
      if (!element) {
        // Top-level categories
        const categories = [...new Set(Object.values(unityMethods).map(m => m.category))];
        return categories.map(category => {
          return new vscode.TreeItem(`${getCategoryIcon(category)} ${category}`, vscode.TreeItemCollapsibleState.Collapsed);
        });
      } else {
        const categoryName = element.label!.toString().replace(/^.*?\s/, '');
        const methods = Object.entries(unityMethods).filter(([, m]) => m.category === categoryName);

        return methods.map(([name, method]) => {
          const item = new vscode.TreeItem(`${name}`, vscode.TreeItemCollapsibleState.None);
          item.tooltip = method.description;
          item.command = {
            command: 'unityMethods.insertSnippetFromTree',
            title: 'Insert Method',
            arguments: [method]
          };
          return item;
        });
      }
    },
    getTreeItem(element: vscode.TreeItem): vscode.TreeItem {
      return element;
    }
  };

  context.subscriptions.push(
    vscode.window.registerTreeDataProvider('unityMethodTree', treeProvider)
  );

  context.subscriptions.push(
    vscode.commands.registerCommand('unityMethods.insertSnippetFromTree', (method: UnityMethod) => {
      vscode.window.activeTextEditor?.insertSnippet(new vscode.SnippetString(method.example));
    })
  );
  const exportToBoilerplate = vscode.commands.registerCommand('unityMethods.exportToBoilerplate', async () => {
    const selectedMethods = await vscode.window.showQuickPick(
      Object.entries(unityMethods).map(([name, method]) => ({
        label: name,
        description: method.description,
        method
      })),
      {
        canPickMany: true,
        placeHolder: 'Select methods to export to a .cs file'
      }
    );

    if (!selectedMethods || selectedMethods.length === 0) { return; }

    const fileContent = `
using UnityEngine;

public class UnityBoilerplate : MonoBehaviour
{
${selectedMethods.map(sel => `    ${sel.method.example.replace(/\n/g, '\n    ')}`).join('\n\n')}
}
    `.trim();

    const uri = await vscode.window.showSaveDialog({
      filters: { 'C# Files': ['cs'] },
      defaultUri: vscode.Uri.file('UnityBoilerplate.cs')
    });

    if (uri) {
      fs.writeFileSync(uri.fsPath, fileContent, 'utf8');
      vscode.window.showInformationMessage(`Exported ${selectedMethods.length} method(s) to ${uri.fsPath}`);
    }
  });
  vscode.workspace.onDidChangeTextDocument(event => {
    const diagnostics: vscode.Diagnostic[] = [];
    const text = event.document.getText();

    for (const [methodName, method] of Object.entries(unityMethods)) {
      const regex = new RegExp(`\\b${methodName}\\b`, 'g');
      let match: RegExpExecArray | null;

      while ((match = regex.exec(text)) !== null) {
        const pos = event.document.positionAt(match.index);
        diagnostics.push(new vscode.Diagnostic(
          new vscode.Range(pos, pos.translate(0, methodName.length)),
          `Unity method: ${methodName} (${method.category})`,
          vscode.DiagnosticSeverity.Hint
        ));
      }
    }

    diagnosticsCollection.set(event.document.uri, diagnostics);
  });
  function isUnityProject(): boolean {
    const folders = vscode.workspace.workspaceFolders;
    if (!folders) return false;

    return folders.some(folder => {
      const assetsPath = path.join(folder.uri.fsPath, 'Assets');
      const projectSettingsPath = path.join(folder.uri.fsPath, 'ProjectSettings');
      return fs.existsSync(assetsPath) && fs.existsSync(projectSettingsPath);
    });
  }
  const searchMethodCommand = vscode.commands.registerCommand('unityMethodHelper.searchMethod', async () => {
    const unityMethodsData = require('./method.json');

    // Convert to array and include the key as name
    const unityMethods: UnityMethod[] = Object.entries(unityMethodsData).map(([name, value]: [string, any]) => ({
      name,
      description: value.description,
      category: value.category,
      example: value.example,
      url: value.url
    }));

    const items = unityMethods.map(method => ({
      label: method.name,
      description: method.category || '',
      detail: method.description || ''
    }));

    const selected = await vscode.window.showQuickPick(items, {
      placeHolder: 'Search Unity method by name',
      matchOnDescription: true,
      matchOnDetail: true
    });

    if (selected) {
      const method = unityMethods.find(m => m.name === selected.label);
      if (method) {
        const editor = vscode.window.activeTextEditor;
        if (editor) {
          editor.insertSnippet(
            new vscode.SnippetString(method.example || `void ${method.name}() {\n    // TODO\n}`),
            editor.selection.active
          );
        }
      }
    }
  });
  function warnIfNotUnityProject() {
    if (!isUnityProject()) {
      vscode.window.showWarningMessage(
        'This workspace does not appear to be a Unity project. Some features may not work as expected.'
      );
    }
  }

  function autoSyncUnityAPI(context: vscode.ExtensionContext) {
    const targetPath = path.join(context.extensionPath, 'data', 'method.json');
    const url = 'https://raw.githubusercontent.com/D-Stokes-NC-Gaming-Studio/unity-method-helper/main/methods.json';

    const update = vscode.workspace.getConfiguration('unityMethodHelper').get<boolean>('autoSync');
    if (!update) return;

    https.get(url, res => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          fs.mkdirSync(path.dirname(targetPath), { recursive: true });
          fs.writeFileSync(targetPath, data);
          vscode.window.showInformationMessage('✅ Unity API synced successfully.');
        } catch (err) {
          vscode.window.showErrorMessage('❌ Failed to sync Unity API.');
          console.error(err);
        }
      });
    }).on('error', err => {
      vscode.window.showErrorMessage('❌ Error fetching Unity API data.');
      console.error(err);
    });
  }

  // Register all top-level commands/providers
  context.subscriptions.push(
    completionProvider,
    hoverProvider,
    showAllCommand,
    snippetInsertCommand,
    validateUnityData,
    generateMethodSnippet,
    exportToBoilerplate,
    searchMethodCommand,
    diagnosticsCollection
  );
  warnIfNotUnityProject();
  autoSyncUnityAPI(context);
}

export function deactivate() {
  diagnosticsCollection?.dispose();
}
